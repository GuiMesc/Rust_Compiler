Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    BECOME
    BOX
    COLON
    CREATE
    DO
    DYN
    ENUM
    EXTERN
    FALSE
    FINAL
    IMPL
    MAIN
    MATCH
    MOD
    MOVE
    PRIV
    PUB
    REF
    RETURN
    SELF
    TRAIT
    TRUE
    TRY
    TYPE
    TYPEOF
    UNION
    UNSAFE
    UNSIZED
    USE
    VIRTUAL
    WHERE
    YIELD
    sELF

Grammar

Rule 0     S' -> start
Rule 1     start -> declaracao_variavel_externa
Rule 2     start -> declaracao_constante
Rule 3     start -> declaracao_funcao
Rule 4     start -> declaracao_variavel_externa start
Rule 5     start -> declaracao_constante start
Rule 6     start -> declaracao_funcao start
Rule 7     declaracao_variavel_externa -> STATIC ID ASSIGN expressao
Rule 8     declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao
Rule 9     declaracao_constante -> CONST ID ASSIGN expressao
Rule 10    declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao
Rule 11    declaracao_variavel -> LET ID ASSIGN expressao
Rule 12    declaracao_variavel -> LET MUT ID ASSIGN expressao
Rule 13    declaracao_variavel -> LET ID DOISPONTOS TIPO ASSIGN expressao
Rule 14    declaracao_variavel -> LET MUT ID DOISPONTOS TIPO ASSIGN expressao
Rule 15    expressao -> expressao_com_bloco
Rule 16    expressao -> expressao_sem_bloco
Rule 17    expressao_com_bloco -> expressao_de_bloco
Rule 18    expressao_com_bloco -> expressao_de_loop
Rule 19    expressao_com_bloco -> expressao_de_if
Rule 20    expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY
Rule 21    declaracao -> SEMICOLON
Rule 22    declaracao -> expressao
Rule 23    expressao_de_loop -> expressao_loop_infinito
Rule 24    expressao_de_loop -> expressao_loop_predicado
Rule 25    expressao_de_loop -> expressao_loop_iterador
Rule 26    expressao_loop_infinito -> LOOP expressao_de_bloco
Rule 27    expressao_loop_predicado -> WHILE expressao_de_bloco
Rule 28    expressao_loop_iterador -> FOR ID IN expressao
Rule 29    expressao_parada -> BREAK
Rule 30    expressao_continue -> CONTINUE
Rule 31    expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco
Rule 32    expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if
Rule 33    declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN
Rule 34    parametros_da_funcao -> ID DOISPONTOS TIPO
Rule 35    tipo_de_retorno -> MINUS GREATER TIPO
Rule 36    expressao_sem_bloco -> literal_expression
Rule 37    expressao_sem_bloco -> group_expression
Rule 38    expressao_sem_bloco -> call_expression
Rule 39    expressao_sem_bloco -> index_expression
Rule 40    literal_expression -> INT
Rule 41    literal_expression1 -> FLOAT
Rule 42    exp -> exp1 ASSIGN exp
Rule 43    exp -> exp1 ASSIGN_PLUS exp
Rule 44    exp -> exp1 ASSIGN_MINUS exp
Rule 45    exp -> exp1 ASSIGN_TIMES exp
Rule 46    exp -> exp1 ASSIGN_DIVIDE exp
Rule 47    exp -> exp1 ASSIGN_RESDIV exp
Rule 48    exp -> exp1 ASSIGN_AND exp
Rule 49    exp -> exp1 ASSIGN_OR exp
Rule 50    exp -> exp1 ASSIGN_XOR exp
Rule 51    exp -> exp1 ASSIGN_LEFTSHIFT exp
Rule 52    exp -> exp1 ASSIGN_RIGHTSHIFT exp
Rule 53    exp -> exp1
Rule 54    exp1 -> exp1 OR exp2
Rule 55    exp1 -> exp2
Rule 56    exp2 -> exp2 AND exp3
Rule 57    exp2 -> exp3
Rule 58    exp3 -> exp3 EQUAL exp4
Rule 59    exp3 -> exp3 NOTEQUAL exp4
Rule 60    exp3 -> exp3 LOWER exp4
Rule 61    exp3 -> exp3 GREATER exp4
Rule 62    exp3 -> exp3 LOWEREQUAL exp4
Rule 63    exp3 -> exp3 GREATEREQUAL exp4
Rule 64    exp3 -> exp4
Rule 65    exp4 -> exp4 SINGLEOR exp5
Rule 66    exp4 -> exp5
Rule 67    exp5 -> exp5 XOR exp6
Rule 68    exp5 -> exp6
Rule 69    exp6 -> exp6 AMPERSAND exp7
Rule 70    exp6 -> exp7
Rule 71    exp7 -> exp7 LEFTSHIFT exp8
Rule 72    exp7 -> exp7 RIGHTSHIFT exp8
Rule 73    exp7 -> exp8
Rule 74    exp8 -> exp8 PLUS exp9
Rule 75    exp8 -> exp8 MINUS exp9
Rule 76    exp8 -> exp9
Rule 77    exp9 -> exp9 TIMES exp10
Rule 78    exp9 -> exp9 DIVIDE exp10
Rule 79    exp9 -> exp9 RESDIV exp10
Rule 80    exp9 -> exp10
Rule 81    exp10 -> MINUS exp10
Rule 82    exp10 -> NOT exp10
Rule 83    exp10 -> expressao_sem_bloco
Rule 84    group_expression -> LEFTPAREN expressao RIGHTPAREN
Rule 85    call_expression -> expressao LEFTPAREN call_params RIGHTPAREN
Rule 86    call_params -> expressao LEFTPAREN expressao RIGHTPAREN
Rule 87    index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSAND            : 69
AND                  : 56
AS                   : 
ASSIGN               : 7 8 9 10 11 12 13 14 42
ASSIGN_AND           : 48
ASSIGN_DIVIDE        : 46
ASSIGN_LEFTSHIFT     : 51
ASSIGN_MINUS         : 44
ASSIGN_OR            : 49
ASSIGN_PLUS          : 43
ASSIGN_RESDIV        : 47
ASSIGN_RIGHTSHIFT    : 52
ASSIGN_TIMES         : 45
ASSIGN_XOR           : 50
BECOME               : 
BOX                  : 
BREAK                : 29
COLON                : 
CONST                : 9 10
CONTINUE             : 30
CREATE               : 
DIVIDE               : 78
DO                   : 
DOISPONTOS           : 8 10 13 14 34
DYN                  : 
ELSE                 : 31 32
ENUM                 : 
EQUAL                : 58
EXTERN               : 
FALSE                : 
FINAL                : 
FLOAT                : 41
FN                   : 33
FOR                  : 28
GREATER              : 35 61
GREATEREQUAL         : 63
ID                   : 7 8 9 10 11 12 13 14 28 33 34
IF                   : 31 32
IMPL                 : 
IN                   : 28
INT                  : 40
LEFTBRACKET          : 87
LEFTKEY              : 20
LEFTPAREN            : 33 33 84 85 86
LEFTSHIFT            : 71
LET                  : 11 12 13 14
LOOP                 : 26
LOWER                : 60
LOWEREQUAL           : 62
MAIN                 : 
MATCH                : 
MINUS                : 35 75 81
MOD                  : 
MOVE                 : 
MUT                  : 12 14
NOT                  : 82
NOTEQUAL             : 59
OR                   : 54
PLUS                 : 74
PRIV                 : 
PUB                  : 
REF                  : 
RESDIV               : 79
RETURN               : 
RIGHTBRACKET         : 87
RIGHTKEY             : 20
RIGHTPAREN           : 33 33 84 85 86
RIGHTSHIFT           : 72
SELF                 : 
SEMICOLON            : 21
SINGLEOR             : 65
STATIC               : 7 8
TIMES                : 77
TIPO                 : 8 10 13 14 34 35
TRAIT                : 
TRUE                 : 
TRY                  : 
TYPE                 : 
TYPEOF               : 
UNION                : 
UNSAFE               : 
UNSIZED              : 
USE                  : 
VIRTUAL              : 
WHERE                : 
WHILE                : 27
XOR                  : 67
YIELD                : 
error                : 
sELF                 : 

Nonterminals, with rules where they appear

call_expression      : 38
call_params          : 85
declaracao           : 20
declaracao_constante : 2 5
declaracao_funcao    : 3 6
declaracao_variavel  : 
declaracao_variavel_externa : 1 4
exp                  : 42 43 44 45 46 47 48 49 50 51 52
exp1                 : 42 43 44 45 46 47 48 49 50 51 52 53 54
exp10                : 77 78 79 80 81 82
exp2                 : 54 55 56
exp3                 : 56 57 58 59 60 61 62 63
exp4                 : 58 59 60 61 62 63 64 65
exp5                 : 65 66 67
exp6                 : 67 68 69
exp7                 : 69 70 71 72
exp8                 : 71 72 73 74 75
exp9                 : 74 75 76 77 78 79
expressao            : 7 8 9 10 11 12 13 14 22 28 31 32 84 85 86 86 87 87
expressao_com_bloco  : 15
expressao_continue   : 
expressao_de_bloco   : 17 26 27 31 31 32 33
expressao_de_if      : 19 32
expressao_de_loop    : 18
expressao_loop_infinito : 23
expressao_loop_iterador : 25
expressao_loop_predicado : 24
expressao_parada     : 
expressao_sem_bloco  : 16 83
group_expression     : 37
index_expression     : 39
literal_expression   : 36
literal_expression1  : 
parametros_da_funcao : 33
start                : 4 5 6 0
tipo_de_retorno      : 33

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . declaracao_variavel_externa
    (2) start -> . declaracao_constante
    (3) start -> . declaracao_funcao
    (4) start -> . declaracao_variavel_externa start
    (5) start -> . declaracao_constante start
    (6) start -> . declaracao_funcao start
    (7) declaracao_variavel_externa -> . STATIC ID ASSIGN expressao
    (8) declaracao_variavel_externa -> . STATIC ID DOISPONTOS TIPO ASSIGN expressao
    (9) declaracao_constante -> . CONST ID ASSIGN expressao
    (10) declaracao_constante -> . CONST ID DOISPONTOS TIPO ASSIGN expressao
    (33) declaracao_funcao -> . FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    STATIC          shift and go to state 5
    CONST           shift and go to state 6
    FN              shift and go to state 7

    start                          shift and go to state 1
    declaracao_variavel_externa    shift and go to state 2
    declaracao_constante           shift and go to state 3
    declaracao_funcao              shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> declaracao_variavel_externa .
    (4) start -> declaracao_variavel_externa . start
    (1) start -> . declaracao_variavel_externa
    (2) start -> . declaracao_constante
    (3) start -> . declaracao_funcao
    (4) start -> . declaracao_variavel_externa start
    (5) start -> . declaracao_constante start
    (6) start -> . declaracao_funcao start
    (7) declaracao_variavel_externa -> . STATIC ID ASSIGN expressao
    (8) declaracao_variavel_externa -> . STATIC ID DOISPONTOS TIPO ASSIGN expressao
    (9) declaracao_constante -> . CONST ID ASSIGN expressao
    (10) declaracao_constante -> . CONST ID DOISPONTOS TIPO ASSIGN expressao
    (33) declaracao_funcao -> . FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    $end            reduce using rule 1 (start -> declaracao_variavel_externa .)
    STATIC          shift and go to state 5
    CONST           shift and go to state 6
    FN              shift and go to state 7

    declaracao_variavel_externa    shift and go to state 2
    start                          shift and go to state 8
    declaracao_constante           shift and go to state 3
    declaracao_funcao              shift and go to state 4

state 3

    (2) start -> declaracao_constante .
    (5) start -> declaracao_constante . start
    (1) start -> . declaracao_variavel_externa
    (2) start -> . declaracao_constante
    (3) start -> . declaracao_funcao
    (4) start -> . declaracao_variavel_externa start
    (5) start -> . declaracao_constante start
    (6) start -> . declaracao_funcao start
    (7) declaracao_variavel_externa -> . STATIC ID ASSIGN expressao
    (8) declaracao_variavel_externa -> . STATIC ID DOISPONTOS TIPO ASSIGN expressao
    (9) declaracao_constante -> . CONST ID ASSIGN expressao
    (10) declaracao_constante -> . CONST ID DOISPONTOS TIPO ASSIGN expressao
    (33) declaracao_funcao -> . FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    $end            reduce using rule 2 (start -> declaracao_constante .)
    STATIC          shift and go to state 5
    CONST           shift and go to state 6
    FN              shift and go to state 7

    declaracao_constante           shift and go to state 3
    start                          shift and go to state 9
    declaracao_variavel_externa    shift and go to state 2
    declaracao_funcao              shift and go to state 4

state 4

    (3) start -> declaracao_funcao .
    (6) start -> declaracao_funcao . start
    (1) start -> . declaracao_variavel_externa
    (2) start -> . declaracao_constante
    (3) start -> . declaracao_funcao
    (4) start -> . declaracao_variavel_externa start
    (5) start -> . declaracao_constante start
    (6) start -> . declaracao_funcao start
    (7) declaracao_variavel_externa -> . STATIC ID ASSIGN expressao
    (8) declaracao_variavel_externa -> . STATIC ID DOISPONTOS TIPO ASSIGN expressao
    (9) declaracao_constante -> . CONST ID ASSIGN expressao
    (10) declaracao_constante -> . CONST ID DOISPONTOS TIPO ASSIGN expressao
    (33) declaracao_funcao -> . FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    $end            reduce using rule 3 (start -> declaracao_funcao .)
    STATIC          shift and go to state 5
    CONST           shift and go to state 6
    FN              shift and go to state 7

    declaracao_funcao              shift and go to state 4
    start                          shift and go to state 10
    declaracao_variavel_externa    shift and go to state 2
    declaracao_constante           shift and go to state 3

state 5

    (7) declaracao_variavel_externa -> STATIC . ID ASSIGN expressao
    (8) declaracao_variavel_externa -> STATIC . ID DOISPONTOS TIPO ASSIGN expressao

    ID              shift and go to state 11


state 6

    (9) declaracao_constante -> CONST . ID ASSIGN expressao
    (10) declaracao_constante -> CONST . ID DOISPONTOS TIPO ASSIGN expressao

    ID              shift and go to state 12


state 7

    (33) declaracao_funcao -> FN . ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    ID              shift and go to state 13


state 8

    (4) start -> declaracao_variavel_externa start .

    $end            reduce using rule 4 (start -> declaracao_variavel_externa start .)


state 9

    (5) start -> declaracao_constante start .

    $end            reduce using rule 5 (start -> declaracao_constante start .)


state 10

    (6) start -> declaracao_funcao start .

    $end            reduce using rule 6 (start -> declaracao_funcao start .)


state 11

    (7) declaracao_variavel_externa -> STATIC ID . ASSIGN expressao
    (8) declaracao_variavel_externa -> STATIC ID . DOISPONTOS TIPO ASSIGN expressao

    ASSIGN          shift and go to state 14
    DOISPONTOS      shift and go to state 15


state 12

    (9) declaracao_constante -> CONST ID . ASSIGN expressao
    (10) declaracao_constante -> CONST ID . DOISPONTOS TIPO ASSIGN expressao

    ASSIGN          shift and go to state 16
    DOISPONTOS      shift and go to state 17


state 13

    (33) declaracao_funcao -> FN ID . LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    LEFTPAREN       shift and go to state 18


state 14

    (7) declaracao_variavel_externa -> STATIC ID ASSIGN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 19
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 15

    (8) declaracao_variavel_externa -> STATIC ID DOISPONTOS . TIPO ASSIGN expressao

    TIPO            shift and go to state 39


state 16

    (9) declaracao_constante -> CONST ID ASSIGN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 40
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 17

    (10) declaracao_constante -> CONST ID DOISPONTOS . TIPO ASSIGN expressao

    TIPO            shift and go to state 41


state 18

    (33) declaracao_funcao -> FN ID LEFTPAREN . parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN
    (34) parametros_da_funcao -> . ID DOISPONTOS TIPO

    ID              shift and go to state 42

    parametros_da_funcao           shift and go to state 43

state 19

    (7) declaracao_variavel_externa -> STATIC ID ASSIGN expressao .
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    STATIC          reduce using rule 7 (declaracao_variavel_externa -> STATIC ID ASSIGN expressao .)
    CONST           reduce using rule 7 (declaracao_variavel_externa -> STATIC ID ASSIGN expressao .)
    FN              reduce using rule 7 (declaracao_variavel_externa -> STATIC ID ASSIGN expressao .)
    $end            reduce using rule 7 (declaracao_variavel_externa -> STATIC ID ASSIGN expressao .)
    LEFTPAREN       shift and go to state 44
    LEFTBRACKET     shift and go to state 45


state 20

    (15) expressao -> expressao_com_bloco .

    LEFTPAREN       reduce using rule 15 (expressao -> expressao_com_bloco .)
    LEFTBRACKET     reduce using rule 15 (expressao -> expressao_com_bloco .)
    STATIC          reduce using rule 15 (expressao -> expressao_com_bloco .)
    CONST           reduce using rule 15 (expressao -> expressao_com_bloco .)
    FN              reduce using rule 15 (expressao -> expressao_com_bloco .)
    $end            reduce using rule 15 (expressao -> expressao_com_bloco .)
    RIGHTKEY        reduce using rule 15 (expressao -> expressao_com_bloco .)
    LEFTKEY         reduce using rule 15 (expressao -> expressao_com_bloco .)
    RIGHTPAREN      reduce using rule 15 (expressao -> expressao_com_bloco .)
    RIGHTBRACKET    reduce using rule 15 (expressao -> expressao_com_bloco .)


state 21

    (16) expressao -> expressao_sem_bloco .

    LEFTPAREN       reduce using rule 16 (expressao -> expressao_sem_bloco .)
    LEFTBRACKET     reduce using rule 16 (expressao -> expressao_sem_bloco .)
    STATIC          reduce using rule 16 (expressao -> expressao_sem_bloco .)
    CONST           reduce using rule 16 (expressao -> expressao_sem_bloco .)
    FN              reduce using rule 16 (expressao -> expressao_sem_bloco .)
    $end            reduce using rule 16 (expressao -> expressao_sem_bloco .)
    RIGHTKEY        reduce using rule 16 (expressao -> expressao_sem_bloco .)
    LEFTKEY         reduce using rule 16 (expressao -> expressao_sem_bloco .)
    RIGHTPAREN      reduce using rule 16 (expressao -> expressao_sem_bloco .)
    RIGHTBRACKET    reduce using rule 16 (expressao -> expressao_sem_bloco .)


state 22

    (17) expressao_com_bloco -> expressao_de_bloco .

    LEFTPAREN       reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    LEFTBRACKET     reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    STATIC          reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    CONST           reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    FN              reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    $end            reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    RIGHTKEY        reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    LEFTKEY         reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    RIGHTPAREN      reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    RIGHTBRACKET    reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)


state 23

    (18) expressao_com_bloco -> expressao_de_loop .

    LEFTPAREN       reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    LEFTBRACKET     reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    STATIC          reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    CONST           reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    FN              reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    $end            reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    RIGHTKEY        reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    LEFTKEY         reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    RIGHTPAREN      reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    RIGHTBRACKET    reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)


state 24

    (19) expressao_com_bloco -> expressao_de_if .

    LEFTPAREN       reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    LEFTBRACKET     reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    STATIC          reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    CONST           reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    FN              reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    $end            reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    RIGHTKEY        reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    LEFTKEY         reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    RIGHTPAREN      reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    RIGHTBRACKET    reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)


state 25

    (36) expressao_sem_bloco -> literal_expression .

    LEFTPAREN       reduce using rule 36 (expressao_sem_bloco -> literal_expression .)
    LEFTBRACKET     reduce using rule 36 (expressao_sem_bloco -> literal_expression .)
    STATIC          reduce using rule 36 (expressao_sem_bloco -> literal_expression .)
    CONST           reduce using rule 36 (expressao_sem_bloco -> literal_expression .)
    FN              reduce using rule 36 (expressao_sem_bloco -> literal_expression .)
    $end            reduce using rule 36 (expressao_sem_bloco -> literal_expression .)
    RIGHTKEY        reduce using rule 36 (expressao_sem_bloco -> literal_expression .)
    LEFTKEY         reduce using rule 36 (expressao_sem_bloco -> literal_expression .)
    RIGHTPAREN      reduce using rule 36 (expressao_sem_bloco -> literal_expression .)
    RIGHTBRACKET    reduce using rule 36 (expressao_sem_bloco -> literal_expression .)


state 26

    (37) expressao_sem_bloco -> group_expression .

    LEFTPAREN       reduce using rule 37 (expressao_sem_bloco -> group_expression .)
    LEFTBRACKET     reduce using rule 37 (expressao_sem_bloco -> group_expression .)
    STATIC          reduce using rule 37 (expressao_sem_bloco -> group_expression .)
    CONST           reduce using rule 37 (expressao_sem_bloco -> group_expression .)
    FN              reduce using rule 37 (expressao_sem_bloco -> group_expression .)
    $end            reduce using rule 37 (expressao_sem_bloco -> group_expression .)
    RIGHTKEY        reduce using rule 37 (expressao_sem_bloco -> group_expression .)
    LEFTKEY         reduce using rule 37 (expressao_sem_bloco -> group_expression .)
    RIGHTPAREN      reduce using rule 37 (expressao_sem_bloco -> group_expression .)
    RIGHTBRACKET    reduce using rule 37 (expressao_sem_bloco -> group_expression .)


state 27

    (38) expressao_sem_bloco -> call_expression .

    LEFTPAREN       reduce using rule 38 (expressao_sem_bloco -> call_expression .)
    LEFTBRACKET     reduce using rule 38 (expressao_sem_bloco -> call_expression .)
    STATIC          reduce using rule 38 (expressao_sem_bloco -> call_expression .)
    CONST           reduce using rule 38 (expressao_sem_bloco -> call_expression .)
    FN              reduce using rule 38 (expressao_sem_bloco -> call_expression .)
    $end            reduce using rule 38 (expressao_sem_bloco -> call_expression .)
    RIGHTKEY        reduce using rule 38 (expressao_sem_bloco -> call_expression .)
    LEFTKEY         reduce using rule 38 (expressao_sem_bloco -> call_expression .)
    RIGHTPAREN      reduce using rule 38 (expressao_sem_bloco -> call_expression .)
    RIGHTBRACKET    reduce using rule 38 (expressao_sem_bloco -> call_expression .)


state 28

    (39) expressao_sem_bloco -> index_expression .

    LEFTPAREN       reduce using rule 39 (expressao_sem_bloco -> index_expression .)
    LEFTBRACKET     reduce using rule 39 (expressao_sem_bloco -> index_expression .)
    STATIC          reduce using rule 39 (expressao_sem_bloco -> index_expression .)
    CONST           reduce using rule 39 (expressao_sem_bloco -> index_expression .)
    FN              reduce using rule 39 (expressao_sem_bloco -> index_expression .)
    $end            reduce using rule 39 (expressao_sem_bloco -> index_expression .)
    RIGHTKEY        reduce using rule 39 (expressao_sem_bloco -> index_expression .)
    LEFTKEY         reduce using rule 39 (expressao_sem_bloco -> index_expression .)
    RIGHTPAREN      reduce using rule 39 (expressao_sem_bloco -> index_expression .)
    RIGHTBRACKET    reduce using rule 39 (expressao_sem_bloco -> index_expression .)


state 29

    (20) expressao_de_bloco -> LEFTKEY . declaracao RIGHTKEY
    (21) declaracao -> . SEMICOLON
    (22) declaracao -> . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    SEMICOLON       shift and go to state 47
    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    declaracao                     shift and go to state 46
    expressao                      shift and go to state 48
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 30

    (23) expressao_de_loop -> expressao_loop_infinito .

    LEFTPAREN       reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)
    LEFTBRACKET     reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)
    STATIC          reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)
    CONST           reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)
    FN              reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)
    $end            reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)
    RIGHTKEY        reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)
    LEFTKEY         reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)
    RIGHTPAREN      reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)
    RIGHTBRACKET    reduce using rule 23 (expressao_de_loop -> expressao_loop_infinito .)


state 31

    (24) expressao_de_loop -> expressao_loop_predicado .

    LEFTPAREN       reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)
    LEFTBRACKET     reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)
    STATIC          reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)
    CONST           reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)
    FN              reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)
    $end            reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)
    RIGHTKEY        reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)
    LEFTKEY         reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)
    RIGHTPAREN      reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)
    RIGHTBRACKET    reduce using rule 24 (expressao_de_loop -> expressao_loop_predicado .)


state 32

    (25) expressao_de_loop -> expressao_loop_iterador .

    LEFTPAREN       reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)
    LEFTBRACKET     reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)
    STATIC          reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)
    CONST           reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)
    FN              reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)
    $end            reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)
    RIGHTKEY        reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)
    LEFTKEY         reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)
    RIGHTPAREN      reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)
    RIGHTBRACKET    reduce using rule 25 (expressao_de_loop -> expressao_loop_iterador .)


state 33

    (31) expressao_de_if -> IF . expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> IF . expressao expressao_de_bloco ELSE expressao_de_if
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 49
    expressao_de_bloco             shift and go to state 22
    expressao_de_if                shift and go to state 24
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_loop              shift and go to state 23
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 34

    (40) literal_expression -> INT .

    LEFTPAREN       reduce using rule 40 (literal_expression -> INT .)
    LEFTBRACKET     reduce using rule 40 (literal_expression -> INT .)
    STATIC          reduce using rule 40 (literal_expression -> INT .)
    CONST           reduce using rule 40 (literal_expression -> INT .)
    FN              reduce using rule 40 (literal_expression -> INT .)
    $end            reduce using rule 40 (literal_expression -> INT .)
    RIGHTKEY        reduce using rule 40 (literal_expression -> INT .)
    LEFTKEY         reduce using rule 40 (literal_expression -> INT .)
    RIGHTPAREN      reduce using rule 40 (literal_expression -> INT .)
    RIGHTBRACKET    reduce using rule 40 (literal_expression -> INT .)


state 35

    (84) group_expression -> LEFTPAREN . expressao RIGHTPAREN
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 50
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 36

    (26) expressao_loop_infinito -> LOOP . expressao_de_bloco
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTKEY         shift and go to state 29

    expressao_de_bloco             shift and go to state 51

state 37

    (27) expressao_loop_predicado -> WHILE . expressao_de_bloco
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTKEY         shift and go to state 29

    expressao_de_bloco             shift and go to state 52

state 38

    (28) expressao_loop_iterador -> FOR . ID IN expressao

    ID              shift and go to state 53


state 39

    (8) declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO . ASSIGN expressao

    ASSIGN          shift and go to state 54


state 40

    (9) declaracao_constante -> CONST ID ASSIGN expressao .
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    STATIC          reduce using rule 9 (declaracao_constante -> CONST ID ASSIGN expressao .)
    CONST           reduce using rule 9 (declaracao_constante -> CONST ID ASSIGN expressao .)
    FN              reduce using rule 9 (declaracao_constante -> CONST ID ASSIGN expressao .)
    $end            reduce using rule 9 (declaracao_constante -> CONST ID ASSIGN expressao .)
    LEFTPAREN       shift and go to state 44
    LEFTBRACKET     shift and go to state 45


state 41

    (10) declaracao_constante -> CONST ID DOISPONTOS TIPO . ASSIGN expressao

    ASSIGN          shift and go to state 55


state 42

    (34) parametros_da_funcao -> ID . DOISPONTOS TIPO

    DOISPONTOS      shift and go to state 56


state 43

    (33) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao . RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    RIGHTPAREN      shift and go to state 57


state 44

    (85) call_expression -> expressao LEFTPAREN . call_params RIGHTPAREN
    (86) call_params -> . expressao LEFTPAREN expressao RIGHTPAREN
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 58
    call_params                    shift and go to state 59
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 45

    (87) index_expression -> expressao LEFTBRACKET . expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 60
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 46

    (20) expressao_de_bloco -> LEFTKEY declaracao . RIGHTKEY

    RIGHTKEY        shift and go to state 61


state 47

    (21) declaracao -> SEMICOLON .

    RIGHTKEY        reduce using rule 21 (declaracao -> SEMICOLON .)


state 48

    (22) declaracao -> expressao .
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    RIGHTKEY        reduce using rule 22 (declaracao -> expressao .)
    LEFTPAREN       shift and go to state 44
    LEFTBRACKET     shift and go to state 45


state 49

    (31) expressao_de_if -> IF expressao . expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> IF expressao . expressao_de_bloco ELSE expressao_de_if
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTPAREN       shift and go to state 44
    LEFTBRACKET     shift and go to state 45
    LEFTKEY         shift and go to state 29

    expressao_de_bloco             shift and go to state 62

state 50

    (84) group_expression -> LEFTPAREN expressao . RIGHTPAREN
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    RIGHTPAREN      shift and go to state 63
    LEFTPAREN       shift and go to state 44
    LEFTBRACKET     shift and go to state 45


state 51

    (26) expressao_loop_infinito -> LOOP expressao_de_bloco .

    LEFTPAREN       reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    LEFTBRACKET     reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    STATIC          reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    CONST           reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    FN              reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    $end            reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    RIGHTKEY        reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    LEFTKEY         reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    RIGHTPAREN      reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    RIGHTBRACKET    reduce using rule 26 (expressao_loop_infinito -> LOOP expressao_de_bloco .)


state 52

    (27) expressao_loop_predicado -> WHILE expressao_de_bloco .

    LEFTPAREN       reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    LEFTBRACKET     reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    STATIC          reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    CONST           reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    FN              reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    $end            reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    RIGHTKEY        reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    LEFTKEY         reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    RIGHTPAREN      reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    RIGHTBRACKET    reduce using rule 27 (expressao_loop_predicado -> WHILE expressao_de_bloco .)


state 53

    (28) expressao_loop_iterador -> FOR ID . IN expressao

    IN              shift and go to state 64


state 54

    (8) declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 65
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 55

    (10) declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 66
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 56

    (34) parametros_da_funcao -> ID DOISPONTOS . TIPO

    TIPO            shift and go to state 67


state 57

    (33) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN . tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN
    (35) tipo_de_retorno -> . MINUS GREATER TIPO

    MINUS           shift and go to state 69

    tipo_de_retorno                shift and go to state 68

state 58

    (86) call_params -> expressao . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    LEFTPAREN       shift and go to state 70
    LEFTBRACKET     shift and go to state 45


state 59

    (85) call_expression -> expressao LEFTPAREN call_params . RIGHTPAREN

    RIGHTPAREN      shift and go to state 71


state 60

    (87) index_expression -> expressao LEFTBRACKET expressao . RIGHTBRACKET
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 72
    LEFTPAREN       shift and go to state 44
    LEFTBRACKET     shift and go to state 45


state 61

    (20) expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .

    LEFTPAREN       reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    LEFTBRACKET     reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    STATIC          reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    CONST           reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    FN              reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    $end            reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    RIGHTKEY        reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    LEFTKEY         reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    RIGHTPAREN      reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    RIGHTBRACKET    reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    ELSE            reduce using rule 20 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)


state 62

    (31) expressao_de_if -> IF expressao expressao_de_bloco . ELSE expressao_de_bloco
    (32) expressao_de_if -> IF expressao expressao_de_bloco . ELSE expressao_de_if

    ELSE            shift and go to state 73


state 63

    (84) group_expression -> LEFTPAREN expressao RIGHTPAREN .

    LEFTPAREN       reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    LEFTBRACKET     reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    STATIC          reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    CONST           reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    FN              reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    $end            reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    RIGHTKEY        reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    LEFTKEY         reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 84 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)


state 64

    (28) expressao_loop_iterador -> FOR ID IN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 74
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 65

    (8) declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    STATIC          reduce using rule 8 (declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .)
    CONST           reduce using rule 8 (declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .)
    FN              reduce using rule 8 (declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .)
    $end            reduce using rule 8 (declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .)
    LEFTPAREN       shift and go to state 44
    LEFTBRACKET     shift and go to state 45


state 66

    (10) declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    STATIC          reduce using rule 10 (declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .)
    CONST           reduce using rule 10 (declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .)
    FN              reduce using rule 10 (declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .)
    $end            reduce using rule 10 (declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .)
    LEFTPAREN       shift and go to state 44
    LEFTBRACKET     shift and go to state 45


state 67

    (34) parametros_da_funcao -> ID DOISPONTOS TIPO .

    RIGHTPAREN      reduce using rule 34 (parametros_da_funcao -> ID DOISPONTOS TIPO .)


state 68

    (33) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno . LEFTPAREN expressao_de_bloco RIGHTPAREN

    LEFTPAREN       shift and go to state 75


state 69

    (35) tipo_de_retorno -> MINUS . GREATER TIPO

    GREATER         shift and go to state 76


state 70

    (86) call_params -> expressao LEFTPAREN . expressao RIGHTPAREN
    (85) call_expression -> expressao LEFTPAREN . call_params RIGHTPAREN
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (86) call_params -> . expressao LEFTPAREN expressao RIGHTPAREN
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (36) expressao_sem_bloco -> . literal_expression
    (37) expressao_sem_bloco -> . group_expression
    (38) expressao_sem_bloco -> . call_expression
    (39) expressao_sem_bloco -> . index_expression
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (23) expressao_de_loop -> . expressao_loop_infinito
    (24) expressao_de_loop -> . expressao_loop_predicado
    (25) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (40) literal_expression -> . INT
    (84) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (26) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (27) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (28) expressao_loop_iterador -> . FOR ID IN expressao

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33
    INT             shift and go to state 34
    LEFTPAREN       shift and go to state 35
    LOOP            shift and go to state 36
    WHILE           shift and go to state 37
    FOR             shift and go to state 38

    expressao                      shift and go to state 77
    call_params                    shift and go to state 59
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    literal_expression             shift and go to state 25
    group_expression               shift and go to state 26
    call_expression                shift and go to state 27
    index_expression               shift and go to state 28
    expressao_loop_infinito        shift and go to state 30
    expressao_loop_predicado       shift and go to state 31
    expressao_loop_iterador        shift and go to state 32

state 71

    (85) call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .

    LEFTPAREN       reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    LEFTBRACKET     reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    STATIC          reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    CONST           reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    FN              reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    $end            reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    RIGHTKEY        reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    LEFTKEY         reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 85 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)


state 72

    (87) index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .

    LEFTPAREN       reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    LEFTBRACKET     reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    STATIC          reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    CONST           reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    FN              reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    $end            reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    RIGHTKEY        reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    LEFTKEY         reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    RIGHTPAREN      reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 87 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)


state 73

    (31) expressao_de_if -> IF expressao expressao_de_bloco ELSE . expressao_de_bloco
    (32) expressao_de_if -> IF expressao expressao_de_bloco ELSE . expressao_de_if
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if

    LEFTKEY         shift and go to state 29
    IF              shift and go to state 33

    expressao_de_bloco             shift and go to state 78
    expressao_de_if                shift and go to state 79

state 74

    (28) expressao_loop_iterador -> FOR ID IN expressao .
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

  ! shift/reduce conflict for LEFTPAREN resolved as shift
  ! shift/reduce conflict for LEFTBRACKET resolved as shift
    STATIC          reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .)
    CONST           reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .)
    FN              reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .)
    $end            reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .)
    RIGHTKEY        reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .)
    LEFTKEY         reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .)
    RIGHTPAREN      reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .)
    RIGHTBRACKET    reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .)
    LEFTPAREN       shift and go to state 44
    LEFTBRACKET     shift and go to state 45

  ! LEFTPAREN       [ reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .) ]
  ! LEFTBRACKET     [ reduce using rule 28 (expressao_loop_iterador -> FOR ID IN expressao .) ]


state 75

    (33) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN . expressao_de_bloco RIGHTPAREN
    (20) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTKEY         shift and go to state 29

    expressao_de_bloco             shift and go to state 80

state 76

    (35) tipo_de_retorno -> MINUS GREATER . TIPO

    TIPO            shift and go to state 81


state 77

    (86) call_params -> expressao LEFTPAREN expressao . RIGHTPAREN
    (86) call_params -> expressao . LEFTPAREN expressao RIGHTPAREN
    (85) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (87) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    RIGHTPAREN      shift and go to state 82
    LEFTPAREN       shift and go to state 70
    LEFTBRACKET     shift and go to state 45


state 78

    (31) expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .

    LEFTPAREN       reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    LEFTBRACKET     reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    STATIC          reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    CONST           reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    FN              reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    $end            reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    RIGHTKEY        reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    LEFTKEY         reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    RIGHTPAREN      reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    RIGHTBRACKET    reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)


state 79

    (32) expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .

    LEFTPAREN       reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    LEFTBRACKET     reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    STATIC          reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    CONST           reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    FN              reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    $end            reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    RIGHTKEY        reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    LEFTKEY         reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    RIGHTPAREN      reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    RIGHTBRACKET    reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)


state 80

    (33) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco . RIGHTPAREN

    RIGHTPAREN      shift and go to state 83


state 81

    (35) tipo_de_retorno -> MINUS GREATER TIPO .

    LEFTPAREN       reduce using rule 35 (tipo_de_retorno -> MINUS GREATER TIPO .)


state 82

    (86) call_params -> expressao LEFTPAREN expressao RIGHTPAREN .

    RIGHTPAREN      reduce using rule 86 (call_params -> expressao LEFTPAREN expressao RIGHTPAREN .)


state 83

    (33) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .

    STATIC          reduce using rule 33 (declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .)
    CONST           reduce using rule 33 (declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .)
    FN              reduce using rule 33 (declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .)
    $end            reduce using rule 33 (declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFTPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for LEFTBRACKET in state 74 resolved as shift
