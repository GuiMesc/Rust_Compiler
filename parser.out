Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    BECOME
    BOX
    BREAK
    COLON
    CREATE
    DO
    DYN
    ENUM
    EXTERN
    FALSE
    FINAL
    IMPL
    MATCH
    MOD
    MOVE
    NOT
    PRIV
    PUB
    REF
    RETURN
    SELF
    TRAIT
    TRUE
    TRY
    TYPE
    TYPEOF
    UNION
    UNSAFE
    UNSIZED
    USE
    VIRTUAL
    WHERE
    YIELD
    sELF

Grammar

Rule 0     S' -> start
Rule 1     start -> declaracao_variavel_externa
Rule 2     start -> declaracao_constante
Rule 3     start -> declaracao_funcao
Rule 4     start -> declaracao_variavel_externa start
Rule 5     start -> declaracao_constante start
Rule 6     start -> declaracao_funcao start
Rule 7     declaracao_variavel_externa -> STATIC ID ASSIGN expressao
Rule 8     declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao
Rule 9     declaracao_constante -> CONST ID ASSIGN expressao
Rule 10    declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao
Rule 11    declaracao_variavel -> LET ID ASSIGN expressao
Rule 12    declaracao_variavel -> LET MUT ID ASSIGN expressao
Rule 13    declaracao_variavel -> LET ID DOISPONTOS TIPO ASSIGN expressao
Rule 14    declaracao_variavel -> LET MUT ID DOISPONTOS TIPO ASSIGN expressao
Rule 15    expressao -> expressao_com_bloco
Rule 16    expressao -> expressao_sem_bloco
Rule 17    expressao_com_bloco -> expressao_de_bloco
Rule 18    expressao_com_bloco -> expressao_de_loop
Rule 19    expressao_com_bloco -> expressao_de_if
Rule 20    expressao_com_bloco -> expressao_de_let_if
Rule 21    expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY
Rule 22    declaracao -> SEMICOLON
Rule 23    declaracao -> expressao
Rule 24    expressao_de_loop -> expressao_loop_infinito
Rule 25    expressao_de_loop -> expressao_loop_predicado
Rule 26    expressao_de_loop -> expressao_loop_iterador
Rule 27    expressao_loop_infinito -> LOOP expressao_de_bloco
Rule 28    expressao_loop_predicado -> WHILE expressao_de_bloco
Rule 29    expressao_loop_iterador -> FOR ID IN expressao
Rule 30    expressao_continue -> CONTINUE
Rule 31    expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco
Rule 32    expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if
Rule 33    expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if
Rule 34    expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
Rule 35    expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if
Rule 36    declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN
Rule 37    parametros_da_funcao -> ID DOISPONTOS TIPO
Rule 38    tipo_de_retorno -> MINUS GREATER TIPO
Rule 39    expressao_sem_bloco -> literal_expression
Rule 40    expressao_sem_bloco -> exp
Rule 41    expressao_sem_bloco -> group_expression
Rule 42    expressao_sem_bloco -> call_expression
Rule 43    expressao_sem_bloco -> index_expression
Rule 44    literal_expression -> INT
Rule 45    literal_expression1 -> FLOAT
Rule 46    exp -> exp1 ASSIGN exp
Rule 47    exp -> exp1 ASSIGN_PLUS exp
Rule 48    exp -> exp1 ASSIGN_MINUS exp
Rule 49    exp -> exp1 ASSIGN_TIMES exp
Rule 50    exp -> exp1 ASSIGN_DIVIDE exp
Rule 51    exp -> exp1 ASSIGN_RESDIV exp
Rule 52    exp -> exp1 ASSIGN_AND exp
Rule 53    exp -> exp1 ASSIGN_OR exp
Rule 54    exp -> exp1 ASSIGN_XOR exp
Rule 55    exp -> exp1 ASSIGN_LEFTSHIFT exp
Rule 56    exp -> exp1 ASSIGN_RIGHTSHIFT exp
Rule 57    exp -> exp1
Rule 58    exp1 -> exp1 OR exp2
Rule 59    exp1 -> exp2
Rule 60    exp2 -> exp2 AND exp3
Rule 61    exp2 -> exp3
Rule 62    exp3 -> exp3 EQUAL exp4
Rule 63    exp3 -> exp3 NOTEQUAL exp4
Rule 64    exp3 -> exp3 LOWER exp4
Rule 65    exp3 -> exp3 GREATER exp4
Rule 66    exp3 -> exp3 LOWEREQUAL exp4
Rule 67    exp3 -> exp3 GREATEREQUAL exp4
Rule 68    exp3 -> exp4
Rule 69    exp4 -> exp4 SINGLEOR exp5
Rule 70    exp4 -> exp5
Rule 71    exp5 -> exp5 XOR exp6
Rule 72    exp5 -> exp6
Rule 73    exp6 -> exp6 AMPERSAND exp7
Rule 74    exp6 -> exp7
Rule 75    exp7 -> exp7 LEFTSHIFT exp8
Rule 76    exp7 -> exp7 RIGHTSHIFT exp8
Rule 77    exp7 -> exp8
Rule 78    exp8 -> exp8 PLUS exp9
Rule 79    exp8 -> exp8 MINUS exp9
Rule 80    exp8 -> exp9
Rule 81    exp9 -> exp9 TIMES exp10
Rule 82    exp9 -> exp9 DIVIDE exp10
Rule 83    exp9 -> exp9 RESDIV exp10
Rule 84    exp9 -> exp10
Rule 85    exp10 -> MINUS exp10
Rule 86    exp10 -> expressao_sem_bloco
Rule 87    group_expression -> LEFTPAREN expressao RIGHTPAREN
Rule 88    call_expression -> expressao LEFTPAREN call_params RIGHTPAREN
Rule 89    call_params -> expressao LEFTPAREN expressao RIGHTPAREN
Rule 90    index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSAND            : 73
AND                  : 60
AS                   : 
ASSIGN               : 7 8 9 10 11 12 13 14 34 46
ASSIGN_AND           : 52
ASSIGN_DIVIDE        : 50
ASSIGN_LEFTSHIFT     : 55
ASSIGN_MINUS         : 48
ASSIGN_OR            : 53
ASSIGN_PLUS          : 47
ASSIGN_RESDIV        : 51
ASSIGN_RIGHTSHIFT    : 56
ASSIGN_TIMES         : 49
ASSIGN_XOR           : 54
BECOME               : 
BOX                  : 
BREAK                : 
COLON                : 
CONST                : 9 10
CONTINUE             : 30
CREATE               : 
DIVIDE               : 82
DO                   : 
DOISPONTOS           : 8 10 13 14 37
DYN                  : 
ELSE                 : 31 32 33 34 35
ENUM                 : 
EQUAL                : 62
EXTERN               : 
FALSE                : 
FINAL                : 
FLOAT                : 45
FN                   : 36
FOR                  : 29
GREATER              : 38 65
GREATEREQUAL         : 67
ID                   : 7 8 9 10 11 12 13 14 29 34 36 37
IF                   : 31 32 33 34 35
IMPL                 : 
IN                   : 29
INT                  : 44
LEFTBRACKET          : 90
LEFTKEY              : 21
LEFTPAREN            : 36 36 87 88 89
LEFTSHIFT            : 75
LET                  : 11 12 13 14 34
LOOP                 : 27
LOWER                : 64
LOWEREQUAL           : 66
MATCH                : 
MINUS                : 38 79 85
MOD                  : 
MOVE                 : 
MUT                  : 12 14
NOT                  : 
NOTEQUAL             : 63
OR                   : 58
PLUS                 : 78
PRIV                 : 
PUB                  : 
REF                  : 
RESDIV               : 83
RETURN               : 
RIGHTBRACKET         : 90
RIGHTKEY             : 21
RIGHTPAREN           : 36 36 87 88 89
RIGHTSHIFT           : 76
SELF                 : 
SEMICOLON            : 22
SINGLEOR             : 69
STATIC               : 7 8
TIMES                : 81
TIPO                 : 8 10 13 14 37 38
TRAIT                : 
TRUE                 : 
TRY                  : 
TYPE                 : 
TYPEOF               : 
UNION                : 
UNSAFE               : 
UNSIZED              : 
USE                  : 
VIRTUAL              : 
WHERE                : 
WHILE                : 28
XOR                  : 71
YIELD                : 
error                : 
sELF                 : 

Nonterminals, with rules where they appear

call_expression      : 42
call_params          : 88
declaracao           : 21
declaracao_constante : 2 5
declaracao_funcao    : 3 6
declaracao_variavel  : 
declaracao_variavel_externa : 1 4
exp                  : 40 46 47 48 49 50 51 52 53 54 55 56
exp1                 : 46 47 48 49 50 51 52 53 54 55 56 57 58
exp10                : 81 82 83 84 85
exp2                 : 58 59 60
exp3                 : 60 61 62 63 64 65 66 67
exp4                 : 62 63 64 65 66 67 68 69
exp5                 : 69 70 71
exp6                 : 71 72 73
exp7                 : 73 74 75 76
exp8                 : 75 76 77 78 79
exp9                 : 78 79 80 81 82 83
expressao            : 7 8 9 10 11 12 13 14 23 29 31 32 33 34 35 87 88 89 89 90 90
expressao_com_bloco  : 15
expressao_continue   : 
expressao_de_bloco   : 17 27 28 31 31 32 33 34 34 35 36
expressao_de_if      : 19 32
expressao_de_let_if  : 20 33 35
expressao_de_loop    : 18
expressao_loop_infinito : 24
expressao_loop_iterador : 26
expressao_loop_predicado : 25
expressao_sem_bloco  : 16 86
group_expression     : 41
index_expression     : 43
literal_expression   : 39
literal_expression1  : 
parametros_da_funcao : 36
start                : 4 5 6 0
tipo_de_retorno      : 36

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . declaracao_variavel_externa
    (2) start -> . declaracao_constante
    (3) start -> . declaracao_funcao
    (4) start -> . declaracao_variavel_externa start
    (5) start -> . declaracao_constante start
    (6) start -> . declaracao_funcao start
    (7) declaracao_variavel_externa -> . STATIC ID ASSIGN expressao
    (8) declaracao_variavel_externa -> . STATIC ID DOISPONTOS TIPO ASSIGN expressao
    (9) declaracao_constante -> . CONST ID ASSIGN expressao
    (10) declaracao_constante -> . CONST ID DOISPONTOS TIPO ASSIGN expressao
    (36) declaracao_funcao -> . FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    STATIC          shift and go to state 5
    CONST           shift and go to state 6
    FN              shift and go to state 7

    start                          shift and go to state 1
    declaracao_variavel_externa    shift and go to state 2
    declaracao_constante           shift and go to state 3
    declaracao_funcao              shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> declaracao_variavel_externa .
    (4) start -> declaracao_variavel_externa . start
    (1) start -> . declaracao_variavel_externa
    (2) start -> . declaracao_constante
    (3) start -> . declaracao_funcao
    (4) start -> . declaracao_variavel_externa start
    (5) start -> . declaracao_constante start
    (6) start -> . declaracao_funcao start
    (7) declaracao_variavel_externa -> . STATIC ID ASSIGN expressao
    (8) declaracao_variavel_externa -> . STATIC ID DOISPONTOS TIPO ASSIGN expressao
    (9) declaracao_constante -> . CONST ID ASSIGN expressao
    (10) declaracao_constante -> . CONST ID DOISPONTOS TIPO ASSIGN expressao
    (36) declaracao_funcao -> . FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    $end            reduce using rule 1 (start -> declaracao_variavel_externa .)
    STATIC          shift and go to state 5
    CONST           shift and go to state 6
    FN              shift and go to state 7

    declaracao_variavel_externa    shift and go to state 2
    start                          shift and go to state 8
    declaracao_constante           shift and go to state 3
    declaracao_funcao              shift and go to state 4

state 3

    (2) start -> declaracao_constante .
    (5) start -> declaracao_constante . start
    (1) start -> . declaracao_variavel_externa
    (2) start -> . declaracao_constante
    (3) start -> . declaracao_funcao
    (4) start -> . declaracao_variavel_externa start
    (5) start -> . declaracao_constante start
    (6) start -> . declaracao_funcao start
    (7) declaracao_variavel_externa -> . STATIC ID ASSIGN expressao
    (8) declaracao_variavel_externa -> . STATIC ID DOISPONTOS TIPO ASSIGN expressao
    (9) declaracao_constante -> . CONST ID ASSIGN expressao
    (10) declaracao_constante -> . CONST ID DOISPONTOS TIPO ASSIGN expressao
    (36) declaracao_funcao -> . FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    $end            reduce using rule 2 (start -> declaracao_constante .)
    STATIC          shift and go to state 5
    CONST           shift and go to state 6
    FN              shift and go to state 7

    declaracao_constante           shift and go to state 3
    start                          shift and go to state 9
    declaracao_variavel_externa    shift and go to state 2
    declaracao_funcao              shift and go to state 4

state 4

    (3) start -> declaracao_funcao .
    (6) start -> declaracao_funcao . start
    (1) start -> . declaracao_variavel_externa
    (2) start -> . declaracao_constante
    (3) start -> . declaracao_funcao
    (4) start -> . declaracao_variavel_externa start
    (5) start -> . declaracao_constante start
    (6) start -> . declaracao_funcao start
    (7) declaracao_variavel_externa -> . STATIC ID ASSIGN expressao
    (8) declaracao_variavel_externa -> . STATIC ID DOISPONTOS TIPO ASSIGN expressao
    (9) declaracao_constante -> . CONST ID ASSIGN expressao
    (10) declaracao_constante -> . CONST ID DOISPONTOS TIPO ASSIGN expressao
    (36) declaracao_funcao -> . FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    $end            reduce using rule 3 (start -> declaracao_funcao .)
    STATIC          shift and go to state 5
    CONST           shift and go to state 6
    FN              shift and go to state 7

    declaracao_funcao              shift and go to state 4
    start                          shift and go to state 10
    declaracao_variavel_externa    shift and go to state 2
    declaracao_constante           shift and go to state 3

state 5

    (7) declaracao_variavel_externa -> STATIC . ID ASSIGN expressao
    (8) declaracao_variavel_externa -> STATIC . ID DOISPONTOS TIPO ASSIGN expressao

    ID              shift and go to state 11


state 6

    (9) declaracao_constante -> CONST . ID ASSIGN expressao
    (10) declaracao_constante -> CONST . ID DOISPONTOS TIPO ASSIGN expressao

    ID              shift and go to state 12


state 7

    (36) declaracao_funcao -> FN . ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    ID              shift and go to state 13


state 8

    (4) start -> declaracao_variavel_externa start .

    $end            reduce using rule 4 (start -> declaracao_variavel_externa start .)


state 9

    (5) start -> declaracao_constante start .

    $end            reduce using rule 5 (start -> declaracao_constante start .)


state 10

    (6) start -> declaracao_funcao start .

    $end            reduce using rule 6 (start -> declaracao_funcao start .)


state 11

    (7) declaracao_variavel_externa -> STATIC ID . ASSIGN expressao
    (8) declaracao_variavel_externa -> STATIC ID . DOISPONTOS TIPO ASSIGN expressao

    ASSIGN          shift and go to state 14
    DOISPONTOS      shift and go to state 15


state 12

    (9) declaracao_constante -> CONST ID . ASSIGN expressao
    (10) declaracao_constante -> CONST ID . DOISPONTOS TIPO ASSIGN expressao

    ASSIGN          shift and go to state 16
    DOISPONTOS      shift and go to state 17


state 13

    (36) declaracao_funcao -> FN ID . LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    LEFTPAREN       shift and go to state 18


state 14

    (7) declaracao_variavel_externa -> STATIC ID ASSIGN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 19
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 15

    (8) declaracao_variavel_externa -> STATIC ID DOISPONTOS . TIPO ASSIGN expressao

    TIPO            shift and go to state 52


state 16

    (9) declaracao_constante -> CONST ID ASSIGN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 53
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 17

    (10) declaracao_constante -> CONST ID DOISPONTOS . TIPO ASSIGN expressao

    TIPO            shift and go to state 54


state 18

    (36) declaracao_funcao -> FN ID LEFTPAREN . parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN
    (37) parametros_da_funcao -> . ID DOISPONTOS TIPO

    ID              shift and go to state 55

    parametros_da_funcao           shift and go to state 56

state 19

    (7) declaracao_variavel_externa -> STATIC ID ASSIGN expressao .
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    STATIC          reduce using rule 7 (declaracao_variavel_externa -> STATIC ID ASSIGN expressao .)
    CONST           reduce using rule 7 (declaracao_variavel_externa -> STATIC ID ASSIGN expressao .)
    FN              reduce using rule 7 (declaracao_variavel_externa -> STATIC ID ASSIGN expressao .)
    $end            reduce using rule 7 (declaracao_variavel_externa -> STATIC ID ASSIGN expressao .)
    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58


state 20

    (15) expressao -> expressao_com_bloco .

    LEFTPAREN       reduce using rule 15 (expressao -> expressao_com_bloco .)
    LEFTBRACKET     reduce using rule 15 (expressao -> expressao_com_bloco .)
    STATIC          reduce using rule 15 (expressao -> expressao_com_bloco .)
    CONST           reduce using rule 15 (expressao -> expressao_com_bloco .)
    FN              reduce using rule 15 (expressao -> expressao_com_bloco .)
    $end            reduce using rule 15 (expressao -> expressao_com_bloco .)
    RIGHTKEY        reduce using rule 15 (expressao -> expressao_com_bloco .)
    LEFTKEY         reduce using rule 15 (expressao -> expressao_com_bloco .)
    RIGHTPAREN      reduce using rule 15 (expressao -> expressao_com_bloco .)
    RIGHTBRACKET    reduce using rule 15 (expressao -> expressao_com_bloco .)


state 21

    (16) expressao -> expressao_sem_bloco .
    (86) exp10 -> expressao_sem_bloco .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for STATIC resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for CONST resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for FN resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for $end resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 16 (expressao -> expressao_sem_bloco .)
    LEFTPAREN       reduce using rule 16 (expressao -> expressao_sem_bloco .)
    LEFTBRACKET     reduce using rule 16 (expressao -> expressao_sem_bloco .)
    STATIC          reduce using rule 16 (expressao -> expressao_sem_bloco .)
    CONST           reduce using rule 16 (expressao -> expressao_sem_bloco .)
    FN              reduce using rule 16 (expressao -> expressao_sem_bloco .)
    $end            reduce using rule 16 (expressao -> expressao_sem_bloco .)
    RIGHTKEY        reduce using rule 16 (expressao -> expressao_sem_bloco .)
    LEFTKEY         reduce using rule 16 (expressao -> expressao_sem_bloco .)
    RIGHTPAREN      reduce using rule 16 (expressao -> expressao_sem_bloco .)
    RIGHTBRACKET    reduce using rule 16 (expressao -> expressao_sem_bloco .)
    TIMES           reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    DIVIDE          reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    RESDIV          reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    PLUS            reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    MINUS           reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    LEFTSHIFT       reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    RIGHTSHIFT      reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    AMPERSAND       reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    XOR             reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    SINGLEOR        reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    EQUAL           reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    NOTEQUAL        reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    LOWER           reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    GREATER         reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    LOWEREQUAL      reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    GREATEREQUAL    reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    AND             reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN          reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_PLUS     reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_MINUS    reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_TIMES    reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_DIVIDE   reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_RESDIV   reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_AND      reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_OR       reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_XOR      reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_LEFTSHIFT reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_RIGHTSHIFT reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    OR              reduce using rule 86 (exp10 -> expressao_sem_bloco .)

  ! LEFTPAREN       [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! LEFTBRACKET     [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! STATIC          [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! CONST           [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! FN              [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! $end            [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! RIGHTKEY        [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! LEFTKEY         [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! RIGHTPAREN      [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! RIGHTBRACKET    [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]


state 22

    (17) expressao_com_bloco -> expressao_de_bloco .

    LEFTPAREN       reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    LEFTBRACKET     reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    STATIC          reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    CONST           reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    FN              reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    $end            reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    RIGHTKEY        reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    LEFTKEY         reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    RIGHTPAREN      reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)
    RIGHTBRACKET    reduce using rule 17 (expressao_com_bloco -> expressao_de_bloco .)


state 23

    (18) expressao_com_bloco -> expressao_de_loop .

    LEFTPAREN       reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    LEFTBRACKET     reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    STATIC          reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    CONST           reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    FN              reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    $end            reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    RIGHTKEY        reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    LEFTKEY         reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    RIGHTPAREN      reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)
    RIGHTBRACKET    reduce using rule 18 (expressao_com_bloco -> expressao_de_loop .)


state 24

    (19) expressao_com_bloco -> expressao_de_if .

    LEFTPAREN       reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    LEFTBRACKET     reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    STATIC          reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    CONST           reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    FN              reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    $end            reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    RIGHTKEY        reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    LEFTKEY         reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    RIGHTPAREN      reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)
    RIGHTBRACKET    reduce using rule 19 (expressao_com_bloco -> expressao_de_if .)


state 25

    (20) expressao_com_bloco -> expressao_de_let_if .

    LEFTPAREN       reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)
    LEFTBRACKET     reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)
    STATIC          reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)
    CONST           reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)
    FN              reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)
    $end            reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)
    RIGHTKEY        reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)
    LEFTKEY         reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)
    RIGHTPAREN      reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)
    RIGHTBRACKET    reduce using rule 20 (expressao_com_bloco -> expressao_de_let_if .)


state 26

    (39) expressao_sem_bloco -> literal_expression .

    LEFTPAREN       reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    LEFTBRACKET     reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    STATIC          reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    CONST           reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    FN              reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    $end            reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    TIMES           reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    DIVIDE          reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    RESDIV          reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    PLUS            reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    MINUS           reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    LEFTSHIFT       reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    RIGHTSHIFT      reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    AMPERSAND       reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    XOR             reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    SINGLEOR        reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    EQUAL           reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    NOTEQUAL        reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    LOWER           reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    GREATER         reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    LOWEREQUAL      reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    GREATEREQUAL    reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    AND             reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN          reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_PLUS     reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_MINUS    reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_TIMES    reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_DIVIDE   reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_RESDIV   reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_AND      reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_OR       reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_XOR      reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_LEFTSHIFT reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    ASSIGN_RIGHTSHIFT reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    OR              reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    RIGHTKEY        reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    LEFTKEY         reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    RIGHTPAREN      reduce using rule 39 (expressao_sem_bloco -> literal_expression .)
    RIGHTBRACKET    reduce using rule 39 (expressao_sem_bloco -> literal_expression .)


state 27

    (40) expressao_sem_bloco -> exp .

    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)


state 28

    (41) expressao_sem_bloco -> group_expression .

    LEFTPAREN       reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    LEFTBRACKET     reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    STATIC          reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    CONST           reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    FN              reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    $end            reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    TIMES           reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    DIVIDE          reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    RESDIV          reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    PLUS            reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    MINUS           reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    LEFTSHIFT       reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    RIGHTSHIFT      reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    AMPERSAND       reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    XOR             reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    SINGLEOR        reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    EQUAL           reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    NOTEQUAL        reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    LOWER           reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    GREATER         reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    LOWEREQUAL      reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    GREATEREQUAL    reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    AND             reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN          reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_PLUS     reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_MINUS    reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_TIMES    reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_DIVIDE   reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_RESDIV   reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_AND      reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_OR       reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_XOR      reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_LEFTSHIFT reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    ASSIGN_RIGHTSHIFT reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    OR              reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    RIGHTKEY        reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    LEFTKEY         reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    RIGHTPAREN      reduce using rule 41 (expressao_sem_bloco -> group_expression .)
    RIGHTBRACKET    reduce using rule 41 (expressao_sem_bloco -> group_expression .)


state 29

    (42) expressao_sem_bloco -> call_expression .

    LEFTPAREN       reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    LEFTBRACKET     reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    STATIC          reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    CONST           reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    FN              reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    $end            reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    TIMES           reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    DIVIDE          reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    RESDIV          reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    PLUS            reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    MINUS           reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    LEFTSHIFT       reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    RIGHTSHIFT      reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    AMPERSAND       reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    XOR             reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    SINGLEOR        reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    EQUAL           reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    NOTEQUAL        reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    LOWER           reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    GREATER         reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    LOWEREQUAL      reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    GREATEREQUAL    reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    AND             reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN          reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_PLUS     reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_MINUS    reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_TIMES    reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_DIVIDE   reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_RESDIV   reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_AND      reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_OR       reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_XOR      reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_LEFTSHIFT reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    ASSIGN_RIGHTSHIFT reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    OR              reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    RIGHTKEY        reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    LEFTKEY         reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    RIGHTPAREN      reduce using rule 42 (expressao_sem_bloco -> call_expression .)
    RIGHTBRACKET    reduce using rule 42 (expressao_sem_bloco -> call_expression .)


state 30

    (43) expressao_sem_bloco -> index_expression .

    LEFTPAREN       reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    LEFTBRACKET     reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    STATIC          reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    CONST           reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    FN              reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    $end            reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    TIMES           reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    DIVIDE          reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    RESDIV          reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    PLUS            reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    MINUS           reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    LEFTSHIFT       reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    RIGHTSHIFT      reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    AMPERSAND       reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    XOR             reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    SINGLEOR        reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    EQUAL           reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    NOTEQUAL        reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    LOWER           reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    GREATER         reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    LOWEREQUAL      reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    GREATEREQUAL    reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    AND             reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN          reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_PLUS     reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_MINUS    reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_TIMES    reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_DIVIDE   reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_RESDIV   reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_AND      reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_OR       reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_XOR      reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_LEFTSHIFT reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    ASSIGN_RIGHTSHIFT reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    OR              reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    RIGHTKEY        reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    LEFTKEY         reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    RIGHTPAREN      reduce using rule 43 (expressao_sem_bloco -> index_expression .)
    RIGHTBRACKET    reduce using rule 43 (expressao_sem_bloco -> index_expression .)


state 31

    (21) expressao_de_bloco -> LEFTKEY . declaracao RIGHTKEY
    (22) declaracao -> . SEMICOLON
    (23) declaracao -> . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    SEMICOLON       shift and go to state 60
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    declaracao                     shift and go to state 59
    expressao                      shift and go to state 61
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 32

    (24) expressao_de_loop -> expressao_loop_infinito .

    LEFTPAREN       reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)
    LEFTBRACKET     reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)
    STATIC          reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)
    CONST           reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)
    FN              reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)
    $end            reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)
    RIGHTKEY        reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)
    LEFTKEY         reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)
    RIGHTPAREN      reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)
    RIGHTBRACKET    reduce using rule 24 (expressao_de_loop -> expressao_loop_infinito .)


state 33

    (25) expressao_de_loop -> expressao_loop_predicado .

    LEFTPAREN       reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)
    LEFTBRACKET     reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)
    STATIC          reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)
    CONST           reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)
    FN              reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)
    $end            reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)
    RIGHTKEY        reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)
    LEFTKEY         reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)
    RIGHTPAREN      reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)
    RIGHTBRACKET    reduce using rule 25 (expressao_de_loop -> expressao_loop_predicado .)


state 34

    (26) expressao_de_loop -> expressao_loop_iterador .

    LEFTPAREN       reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)
    LEFTBRACKET     reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)
    STATIC          reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)
    CONST           reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)
    FN              reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)
    $end            reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)
    RIGHTKEY        reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)
    LEFTKEY         reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)
    RIGHTPAREN      reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)
    RIGHTBRACKET    reduce using rule 26 (expressao_de_loop -> expressao_loop_iterador .)


state 35

    (31) expressao_de_if -> IF . expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> IF . expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> IF . expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> IF . LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> IF . expressao expressao_de_bloco ELSE expressao_de_let_if
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LET             shift and go to state 63
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 62
    expressao_de_bloco             shift and go to state 22
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_loop              shift and go to state 23
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 36

    (44) literal_expression -> INT .

    LEFTPAREN       reduce using rule 44 (literal_expression -> INT .)
    LEFTBRACKET     reduce using rule 44 (literal_expression -> INT .)
    STATIC          reduce using rule 44 (literal_expression -> INT .)
    CONST           reduce using rule 44 (literal_expression -> INT .)
    FN              reduce using rule 44 (literal_expression -> INT .)
    $end            reduce using rule 44 (literal_expression -> INT .)
    TIMES           reduce using rule 44 (literal_expression -> INT .)
    DIVIDE          reduce using rule 44 (literal_expression -> INT .)
    RESDIV          reduce using rule 44 (literal_expression -> INT .)
    PLUS            reduce using rule 44 (literal_expression -> INT .)
    MINUS           reduce using rule 44 (literal_expression -> INT .)
    LEFTSHIFT       reduce using rule 44 (literal_expression -> INT .)
    RIGHTSHIFT      reduce using rule 44 (literal_expression -> INT .)
    AMPERSAND       reduce using rule 44 (literal_expression -> INT .)
    XOR             reduce using rule 44 (literal_expression -> INT .)
    SINGLEOR        reduce using rule 44 (literal_expression -> INT .)
    EQUAL           reduce using rule 44 (literal_expression -> INT .)
    NOTEQUAL        reduce using rule 44 (literal_expression -> INT .)
    LOWER           reduce using rule 44 (literal_expression -> INT .)
    GREATER         reduce using rule 44 (literal_expression -> INT .)
    LOWEREQUAL      reduce using rule 44 (literal_expression -> INT .)
    GREATEREQUAL    reduce using rule 44 (literal_expression -> INT .)
    AND             reduce using rule 44 (literal_expression -> INT .)
    ASSIGN          reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_PLUS     reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_MINUS    reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_TIMES    reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_DIVIDE   reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_RESDIV   reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_AND      reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_OR       reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_XOR      reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_LEFTSHIFT reduce using rule 44 (literal_expression -> INT .)
    ASSIGN_RIGHTSHIFT reduce using rule 44 (literal_expression -> INT .)
    OR              reduce using rule 44 (literal_expression -> INT .)
    RIGHTKEY        reduce using rule 44 (literal_expression -> INT .)
    LEFTKEY         reduce using rule 44 (literal_expression -> INT .)
    RIGHTPAREN      reduce using rule 44 (literal_expression -> INT .)
    RIGHTBRACKET    reduce using rule 44 (literal_expression -> INT .)


state 37

    (46) exp -> exp1 . ASSIGN exp
    (47) exp -> exp1 . ASSIGN_PLUS exp
    (48) exp -> exp1 . ASSIGN_MINUS exp
    (49) exp -> exp1 . ASSIGN_TIMES exp
    (50) exp -> exp1 . ASSIGN_DIVIDE exp
    (51) exp -> exp1 . ASSIGN_RESDIV exp
    (52) exp -> exp1 . ASSIGN_AND exp
    (53) exp -> exp1 . ASSIGN_OR exp
    (54) exp -> exp1 . ASSIGN_XOR exp
    (55) exp -> exp1 . ASSIGN_LEFTSHIFT exp
    (56) exp -> exp1 . ASSIGN_RIGHTSHIFT exp
    (57) exp -> exp1 .
    (58) exp1 -> exp1 . OR exp2

  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ASSIGN_PLUS resolved as shift
  ! shift/reduce conflict for ASSIGN_MINUS resolved as shift
  ! shift/reduce conflict for ASSIGN_TIMES resolved as shift
  ! shift/reduce conflict for ASSIGN_DIVIDE resolved as shift
  ! shift/reduce conflict for ASSIGN_RESDIV resolved as shift
  ! shift/reduce conflict for ASSIGN_AND resolved as shift
  ! shift/reduce conflict for ASSIGN_OR resolved as shift
  ! shift/reduce conflict for ASSIGN_XOR resolved as shift
  ! shift/reduce conflict for ASSIGN_LEFTSHIFT resolved as shift
  ! shift/reduce conflict for ASSIGN_RIGHTSHIFT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    ASSIGN          shift and go to state 64
    ASSIGN_PLUS     shift and go to state 65
    ASSIGN_MINUS    shift and go to state 66
    ASSIGN_TIMES    shift and go to state 67
    ASSIGN_DIVIDE   shift and go to state 68
    ASSIGN_RESDIV   shift and go to state 69
    ASSIGN_AND      shift and go to state 70
    ASSIGN_OR       shift and go to state 71
    ASSIGN_XOR      shift and go to state 72
    ASSIGN_LEFTSHIFT shift and go to state 73
    ASSIGN_RIGHTSHIFT shift and go to state 74
    LEFTPAREN       reduce using rule 57 (exp -> exp1 .)
    LEFTBRACKET     reduce using rule 57 (exp -> exp1 .)
    STATIC          reduce using rule 57 (exp -> exp1 .)
    CONST           reduce using rule 57 (exp -> exp1 .)
    FN              reduce using rule 57 (exp -> exp1 .)
    $end            reduce using rule 57 (exp -> exp1 .)
    TIMES           reduce using rule 57 (exp -> exp1 .)
    DIVIDE          reduce using rule 57 (exp -> exp1 .)
    RESDIV          reduce using rule 57 (exp -> exp1 .)
    PLUS            reduce using rule 57 (exp -> exp1 .)
    MINUS           reduce using rule 57 (exp -> exp1 .)
    LEFTSHIFT       reduce using rule 57 (exp -> exp1 .)
    RIGHTSHIFT      reduce using rule 57 (exp -> exp1 .)
    AMPERSAND       reduce using rule 57 (exp -> exp1 .)
    XOR             reduce using rule 57 (exp -> exp1 .)
    SINGLEOR        reduce using rule 57 (exp -> exp1 .)
    EQUAL           reduce using rule 57 (exp -> exp1 .)
    NOTEQUAL        reduce using rule 57 (exp -> exp1 .)
    LOWER           reduce using rule 57 (exp -> exp1 .)
    GREATER         reduce using rule 57 (exp -> exp1 .)
    LOWEREQUAL      reduce using rule 57 (exp -> exp1 .)
    GREATEREQUAL    reduce using rule 57 (exp -> exp1 .)
    AND             reduce using rule 57 (exp -> exp1 .)
    RIGHTKEY        reduce using rule 57 (exp -> exp1 .)
    LEFTKEY         reduce using rule 57 (exp -> exp1 .)
    RIGHTPAREN      reduce using rule 57 (exp -> exp1 .)
    RIGHTBRACKET    reduce using rule 57 (exp -> exp1 .)
    OR              shift and go to state 75

  ! ASSIGN          [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_AND      [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_OR       [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_XOR      [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 57 (exp -> exp1 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 57 (exp -> exp1 .) ]
  ! OR              [ reduce using rule 57 (exp -> exp1 .) ]


state 38

    (87) group_expression -> LEFTPAREN . expressao RIGHTPAREN
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 76
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 39

    (27) expressao_loop_infinito -> LOOP . expressao_de_bloco
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTKEY         shift and go to state 31

    expressao_de_bloco             shift and go to state 77

state 40

    (28) expressao_loop_predicado -> WHILE . expressao_de_bloco
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTKEY         shift and go to state 31

    expressao_de_bloco             shift and go to state 78

state 41

    (29) expressao_loop_iterador -> FOR . ID IN expressao

    ID              shift and go to state 79


state 42

    (59) exp1 -> exp2 .
    (60) exp2 -> exp2 . AND exp3

  ! shift/reduce conflict for AND resolved as shift
    LEFTPAREN       reduce using rule 59 (exp1 -> exp2 .)
    LEFTBRACKET     reduce using rule 59 (exp1 -> exp2 .)
    STATIC          reduce using rule 59 (exp1 -> exp2 .)
    CONST           reduce using rule 59 (exp1 -> exp2 .)
    FN              reduce using rule 59 (exp1 -> exp2 .)
    $end            reduce using rule 59 (exp1 -> exp2 .)
    TIMES           reduce using rule 59 (exp1 -> exp2 .)
    DIVIDE          reduce using rule 59 (exp1 -> exp2 .)
    RESDIV          reduce using rule 59 (exp1 -> exp2 .)
    PLUS            reduce using rule 59 (exp1 -> exp2 .)
    MINUS           reduce using rule 59 (exp1 -> exp2 .)
    LEFTSHIFT       reduce using rule 59 (exp1 -> exp2 .)
    RIGHTSHIFT      reduce using rule 59 (exp1 -> exp2 .)
    AMPERSAND       reduce using rule 59 (exp1 -> exp2 .)
    XOR             reduce using rule 59 (exp1 -> exp2 .)
    SINGLEOR        reduce using rule 59 (exp1 -> exp2 .)
    EQUAL           reduce using rule 59 (exp1 -> exp2 .)
    NOTEQUAL        reduce using rule 59 (exp1 -> exp2 .)
    LOWER           reduce using rule 59 (exp1 -> exp2 .)
    GREATER         reduce using rule 59 (exp1 -> exp2 .)
    LOWEREQUAL      reduce using rule 59 (exp1 -> exp2 .)
    GREATEREQUAL    reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN          reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_PLUS     reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_MINUS    reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_TIMES    reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_DIVIDE   reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_RESDIV   reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_AND      reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_OR       reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_XOR      reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_LEFTSHIFT reduce using rule 59 (exp1 -> exp2 .)
    ASSIGN_RIGHTSHIFT reduce using rule 59 (exp1 -> exp2 .)
    OR              reduce using rule 59 (exp1 -> exp2 .)
    RIGHTKEY        reduce using rule 59 (exp1 -> exp2 .)
    LEFTKEY         reduce using rule 59 (exp1 -> exp2 .)
    RIGHTPAREN      reduce using rule 59 (exp1 -> exp2 .)
    RIGHTBRACKET    reduce using rule 59 (exp1 -> exp2 .)
    AND             shift and go to state 80

  ! AND             [ reduce using rule 59 (exp1 -> exp2 .) ]


state 43

    (61) exp2 -> exp3 .
    (62) exp3 -> exp3 . EQUAL exp4
    (63) exp3 -> exp3 . NOTEQUAL exp4
    (64) exp3 -> exp3 . LOWER exp4
    (65) exp3 -> exp3 . GREATER exp4
    (66) exp3 -> exp3 . LOWEREQUAL exp4
    (67) exp3 -> exp3 . GREATEREQUAL exp4

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LOWEREQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
    LEFTPAREN       reduce using rule 61 (exp2 -> exp3 .)
    LEFTBRACKET     reduce using rule 61 (exp2 -> exp3 .)
    STATIC          reduce using rule 61 (exp2 -> exp3 .)
    CONST           reduce using rule 61 (exp2 -> exp3 .)
    FN              reduce using rule 61 (exp2 -> exp3 .)
    $end            reduce using rule 61 (exp2 -> exp3 .)
    TIMES           reduce using rule 61 (exp2 -> exp3 .)
    DIVIDE          reduce using rule 61 (exp2 -> exp3 .)
    RESDIV          reduce using rule 61 (exp2 -> exp3 .)
    PLUS            reduce using rule 61 (exp2 -> exp3 .)
    MINUS           reduce using rule 61 (exp2 -> exp3 .)
    LEFTSHIFT       reduce using rule 61 (exp2 -> exp3 .)
    RIGHTSHIFT      reduce using rule 61 (exp2 -> exp3 .)
    AMPERSAND       reduce using rule 61 (exp2 -> exp3 .)
    XOR             reduce using rule 61 (exp2 -> exp3 .)
    SINGLEOR        reduce using rule 61 (exp2 -> exp3 .)
    AND             reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN          reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_PLUS     reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_MINUS    reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_TIMES    reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_DIVIDE   reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_RESDIV   reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_AND      reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_OR       reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_XOR      reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_LEFTSHIFT reduce using rule 61 (exp2 -> exp3 .)
    ASSIGN_RIGHTSHIFT reduce using rule 61 (exp2 -> exp3 .)
    OR              reduce using rule 61 (exp2 -> exp3 .)
    RIGHTKEY        reduce using rule 61 (exp2 -> exp3 .)
    LEFTKEY         reduce using rule 61 (exp2 -> exp3 .)
    RIGHTPAREN      reduce using rule 61 (exp2 -> exp3 .)
    RIGHTBRACKET    reduce using rule 61 (exp2 -> exp3 .)
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LOWER           shift and go to state 83
    GREATER         shift and go to state 84
    LOWEREQUAL      shift and go to state 85
    GREATEREQUAL    shift and go to state 86

  ! EQUAL           [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! NOTEQUAL        [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! LOWER           [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! GREATER         [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! LOWEREQUAL      [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! GREATEREQUAL    [ reduce using rule 61 (exp2 -> exp3 .) ]


state 44

    (68) exp3 -> exp4 .
    (69) exp4 -> exp4 . SINGLEOR exp5

  ! shift/reduce conflict for SINGLEOR resolved as shift
    LEFTPAREN       reduce using rule 68 (exp3 -> exp4 .)
    LEFTBRACKET     reduce using rule 68 (exp3 -> exp4 .)
    STATIC          reduce using rule 68 (exp3 -> exp4 .)
    CONST           reduce using rule 68 (exp3 -> exp4 .)
    FN              reduce using rule 68 (exp3 -> exp4 .)
    $end            reduce using rule 68 (exp3 -> exp4 .)
    TIMES           reduce using rule 68 (exp3 -> exp4 .)
    DIVIDE          reduce using rule 68 (exp3 -> exp4 .)
    RESDIV          reduce using rule 68 (exp3 -> exp4 .)
    PLUS            reduce using rule 68 (exp3 -> exp4 .)
    MINUS           reduce using rule 68 (exp3 -> exp4 .)
    LEFTSHIFT       reduce using rule 68 (exp3 -> exp4 .)
    RIGHTSHIFT      reduce using rule 68 (exp3 -> exp4 .)
    AMPERSAND       reduce using rule 68 (exp3 -> exp4 .)
    XOR             reduce using rule 68 (exp3 -> exp4 .)
    EQUAL           reduce using rule 68 (exp3 -> exp4 .)
    NOTEQUAL        reduce using rule 68 (exp3 -> exp4 .)
    LOWER           reduce using rule 68 (exp3 -> exp4 .)
    GREATER         reduce using rule 68 (exp3 -> exp4 .)
    LOWEREQUAL      reduce using rule 68 (exp3 -> exp4 .)
    GREATEREQUAL    reduce using rule 68 (exp3 -> exp4 .)
    AND             reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN          reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_PLUS     reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_MINUS    reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_TIMES    reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_DIVIDE   reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_RESDIV   reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_AND      reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_OR       reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_XOR      reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_LEFTSHIFT reduce using rule 68 (exp3 -> exp4 .)
    ASSIGN_RIGHTSHIFT reduce using rule 68 (exp3 -> exp4 .)
    OR              reduce using rule 68 (exp3 -> exp4 .)
    RIGHTKEY        reduce using rule 68 (exp3 -> exp4 .)
    LEFTKEY         reduce using rule 68 (exp3 -> exp4 .)
    RIGHTPAREN      reduce using rule 68 (exp3 -> exp4 .)
    RIGHTBRACKET    reduce using rule 68 (exp3 -> exp4 .)
    SINGLEOR        shift and go to state 87

  ! SINGLEOR        [ reduce using rule 68 (exp3 -> exp4 .) ]


state 45

    (70) exp4 -> exp5 .
    (71) exp5 -> exp5 . XOR exp6

  ! shift/reduce conflict for XOR resolved as shift
    LEFTPAREN       reduce using rule 70 (exp4 -> exp5 .)
    LEFTBRACKET     reduce using rule 70 (exp4 -> exp5 .)
    STATIC          reduce using rule 70 (exp4 -> exp5 .)
    CONST           reduce using rule 70 (exp4 -> exp5 .)
    FN              reduce using rule 70 (exp4 -> exp5 .)
    $end            reduce using rule 70 (exp4 -> exp5 .)
    TIMES           reduce using rule 70 (exp4 -> exp5 .)
    DIVIDE          reduce using rule 70 (exp4 -> exp5 .)
    RESDIV          reduce using rule 70 (exp4 -> exp5 .)
    PLUS            reduce using rule 70 (exp4 -> exp5 .)
    MINUS           reduce using rule 70 (exp4 -> exp5 .)
    LEFTSHIFT       reduce using rule 70 (exp4 -> exp5 .)
    RIGHTSHIFT      reduce using rule 70 (exp4 -> exp5 .)
    AMPERSAND       reduce using rule 70 (exp4 -> exp5 .)
    SINGLEOR        reduce using rule 70 (exp4 -> exp5 .)
    EQUAL           reduce using rule 70 (exp4 -> exp5 .)
    NOTEQUAL        reduce using rule 70 (exp4 -> exp5 .)
    LOWER           reduce using rule 70 (exp4 -> exp5 .)
    GREATER         reduce using rule 70 (exp4 -> exp5 .)
    LOWEREQUAL      reduce using rule 70 (exp4 -> exp5 .)
    GREATEREQUAL    reduce using rule 70 (exp4 -> exp5 .)
    AND             reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN          reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_PLUS     reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_MINUS    reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_TIMES    reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_DIVIDE   reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_RESDIV   reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_AND      reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_OR       reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_XOR      reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_LEFTSHIFT reduce using rule 70 (exp4 -> exp5 .)
    ASSIGN_RIGHTSHIFT reduce using rule 70 (exp4 -> exp5 .)
    OR              reduce using rule 70 (exp4 -> exp5 .)
    RIGHTKEY        reduce using rule 70 (exp4 -> exp5 .)
    LEFTKEY         reduce using rule 70 (exp4 -> exp5 .)
    RIGHTPAREN      reduce using rule 70 (exp4 -> exp5 .)
    RIGHTBRACKET    reduce using rule 70 (exp4 -> exp5 .)
    XOR             shift and go to state 88

  ! XOR             [ reduce using rule 70 (exp4 -> exp5 .) ]


state 46

    (72) exp5 -> exp6 .
    (73) exp6 -> exp6 . AMPERSAND exp7

  ! shift/reduce conflict for AMPERSAND resolved as shift
    LEFTPAREN       reduce using rule 72 (exp5 -> exp6 .)
    LEFTBRACKET     reduce using rule 72 (exp5 -> exp6 .)
    STATIC          reduce using rule 72 (exp5 -> exp6 .)
    CONST           reduce using rule 72 (exp5 -> exp6 .)
    FN              reduce using rule 72 (exp5 -> exp6 .)
    $end            reduce using rule 72 (exp5 -> exp6 .)
    TIMES           reduce using rule 72 (exp5 -> exp6 .)
    DIVIDE          reduce using rule 72 (exp5 -> exp6 .)
    RESDIV          reduce using rule 72 (exp5 -> exp6 .)
    PLUS            reduce using rule 72 (exp5 -> exp6 .)
    MINUS           reduce using rule 72 (exp5 -> exp6 .)
    LEFTSHIFT       reduce using rule 72 (exp5 -> exp6 .)
    RIGHTSHIFT      reduce using rule 72 (exp5 -> exp6 .)
    XOR             reduce using rule 72 (exp5 -> exp6 .)
    SINGLEOR        reduce using rule 72 (exp5 -> exp6 .)
    EQUAL           reduce using rule 72 (exp5 -> exp6 .)
    NOTEQUAL        reduce using rule 72 (exp5 -> exp6 .)
    LOWER           reduce using rule 72 (exp5 -> exp6 .)
    GREATER         reduce using rule 72 (exp5 -> exp6 .)
    LOWEREQUAL      reduce using rule 72 (exp5 -> exp6 .)
    GREATEREQUAL    reduce using rule 72 (exp5 -> exp6 .)
    AND             reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN          reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_PLUS     reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_MINUS    reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_TIMES    reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_DIVIDE   reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_RESDIV   reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_AND      reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_OR       reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_XOR      reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_LEFTSHIFT reduce using rule 72 (exp5 -> exp6 .)
    ASSIGN_RIGHTSHIFT reduce using rule 72 (exp5 -> exp6 .)
    OR              reduce using rule 72 (exp5 -> exp6 .)
    RIGHTKEY        reduce using rule 72 (exp5 -> exp6 .)
    LEFTKEY         reduce using rule 72 (exp5 -> exp6 .)
    RIGHTPAREN      reduce using rule 72 (exp5 -> exp6 .)
    RIGHTBRACKET    reduce using rule 72 (exp5 -> exp6 .)
    AMPERSAND       shift and go to state 89

  ! AMPERSAND       [ reduce using rule 72 (exp5 -> exp6 .) ]


state 47

    (74) exp6 -> exp7 .
    (75) exp7 -> exp7 . LEFTSHIFT exp8
    (76) exp7 -> exp7 . RIGHTSHIFT exp8

  ! shift/reduce conflict for LEFTSHIFT resolved as shift
  ! shift/reduce conflict for RIGHTSHIFT resolved as shift
    LEFTPAREN       reduce using rule 74 (exp6 -> exp7 .)
    LEFTBRACKET     reduce using rule 74 (exp6 -> exp7 .)
    STATIC          reduce using rule 74 (exp6 -> exp7 .)
    CONST           reduce using rule 74 (exp6 -> exp7 .)
    FN              reduce using rule 74 (exp6 -> exp7 .)
    $end            reduce using rule 74 (exp6 -> exp7 .)
    TIMES           reduce using rule 74 (exp6 -> exp7 .)
    DIVIDE          reduce using rule 74 (exp6 -> exp7 .)
    RESDIV          reduce using rule 74 (exp6 -> exp7 .)
    PLUS            reduce using rule 74 (exp6 -> exp7 .)
    MINUS           reduce using rule 74 (exp6 -> exp7 .)
    AMPERSAND       reduce using rule 74 (exp6 -> exp7 .)
    XOR             reduce using rule 74 (exp6 -> exp7 .)
    SINGLEOR        reduce using rule 74 (exp6 -> exp7 .)
    EQUAL           reduce using rule 74 (exp6 -> exp7 .)
    NOTEQUAL        reduce using rule 74 (exp6 -> exp7 .)
    LOWER           reduce using rule 74 (exp6 -> exp7 .)
    GREATER         reduce using rule 74 (exp6 -> exp7 .)
    LOWEREQUAL      reduce using rule 74 (exp6 -> exp7 .)
    GREATEREQUAL    reduce using rule 74 (exp6 -> exp7 .)
    AND             reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN          reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_PLUS     reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_MINUS    reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_TIMES    reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_DIVIDE   reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_RESDIV   reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_AND      reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_OR       reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_XOR      reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_LEFTSHIFT reduce using rule 74 (exp6 -> exp7 .)
    ASSIGN_RIGHTSHIFT reduce using rule 74 (exp6 -> exp7 .)
    OR              reduce using rule 74 (exp6 -> exp7 .)
    RIGHTKEY        reduce using rule 74 (exp6 -> exp7 .)
    LEFTKEY         reduce using rule 74 (exp6 -> exp7 .)
    RIGHTPAREN      reduce using rule 74 (exp6 -> exp7 .)
    RIGHTBRACKET    reduce using rule 74 (exp6 -> exp7 .)
    LEFTSHIFT       shift and go to state 90
    RIGHTSHIFT      shift and go to state 91

  ! LEFTSHIFT       [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! RIGHTSHIFT      [ reduce using rule 74 (exp6 -> exp7 .) ]


state 48

    (77) exp7 -> exp8 .
    (78) exp8 -> exp8 . PLUS exp9
    (79) exp8 -> exp8 . MINUS exp9

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LEFTPAREN       reduce using rule 77 (exp7 -> exp8 .)
    LEFTBRACKET     reduce using rule 77 (exp7 -> exp8 .)
    STATIC          reduce using rule 77 (exp7 -> exp8 .)
    CONST           reduce using rule 77 (exp7 -> exp8 .)
    FN              reduce using rule 77 (exp7 -> exp8 .)
    $end            reduce using rule 77 (exp7 -> exp8 .)
    TIMES           reduce using rule 77 (exp7 -> exp8 .)
    DIVIDE          reduce using rule 77 (exp7 -> exp8 .)
    RESDIV          reduce using rule 77 (exp7 -> exp8 .)
    LEFTSHIFT       reduce using rule 77 (exp7 -> exp8 .)
    RIGHTSHIFT      reduce using rule 77 (exp7 -> exp8 .)
    AMPERSAND       reduce using rule 77 (exp7 -> exp8 .)
    XOR             reduce using rule 77 (exp7 -> exp8 .)
    SINGLEOR        reduce using rule 77 (exp7 -> exp8 .)
    EQUAL           reduce using rule 77 (exp7 -> exp8 .)
    NOTEQUAL        reduce using rule 77 (exp7 -> exp8 .)
    LOWER           reduce using rule 77 (exp7 -> exp8 .)
    GREATER         reduce using rule 77 (exp7 -> exp8 .)
    LOWEREQUAL      reduce using rule 77 (exp7 -> exp8 .)
    GREATEREQUAL    reduce using rule 77 (exp7 -> exp8 .)
    AND             reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN          reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_PLUS     reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_MINUS    reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_TIMES    reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_DIVIDE   reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_RESDIV   reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_AND      reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_OR       reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_XOR      reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_LEFTSHIFT reduce using rule 77 (exp7 -> exp8 .)
    ASSIGN_RIGHTSHIFT reduce using rule 77 (exp7 -> exp8 .)
    OR              reduce using rule 77 (exp7 -> exp8 .)
    RIGHTKEY        reduce using rule 77 (exp7 -> exp8 .)
    LEFTKEY         reduce using rule 77 (exp7 -> exp8 .)
    RIGHTPAREN      reduce using rule 77 (exp7 -> exp8 .)
    RIGHTBRACKET    reduce using rule 77 (exp7 -> exp8 .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93

  ! PLUS            [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! MINUS           [ reduce using rule 77 (exp7 -> exp8 .) ]


state 49

    (80) exp8 -> exp9 .
    (81) exp9 -> exp9 . TIMES exp10
    (82) exp9 -> exp9 . DIVIDE exp10
    (83) exp9 -> exp9 . RESDIV exp10

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for RESDIV resolved as shift
    LEFTPAREN       reduce using rule 80 (exp8 -> exp9 .)
    LEFTBRACKET     reduce using rule 80 (exp8 -> exp9 .)
    STATIC          reduce using rule 80 (exp8 -> exp9 .)
    CONST           reduce using rule 80 (exp8 -> exp9 .)
    FN              reduce using rule 80 (exp8 -> exp9 .)
    $end            reduce using rule 80 (exp8 -> exp9 .)
    PLUS            reduce using rule 80 (exp8 -> exp9 .)
    MINUS           reduce using rule 80 (exp8 -> exp9 .)
    LEFTSHIFT       reduce using rule 80 (exp8 -> exp9 .)
    RIGHTSHIFT      reduce using rule 80 (exp8 -> exp9 .)
    AMPERSAND       reduce using rule 80 (exp8 -> exp9 .)
    XOR             reduce using rule 80 (exp8 -> exp9 .)
    SINGLEOR        reduce using rule 80 (exp8 -> exp9 .)
    EQUAL           reduce using rule 80 (exp8 -> exp9 .)
    NOTEQUAL        reduce using rule 80 (exp8 -> exp9 .)
    LOWER           reduce using rule 80 (exp8 -> exp9 .)
    GREATER         reduce using rule 80 (exp8 -> exp9 .)
    LOWEREQUAL      reduce using rule 80 (exp8 -> exp9 .)
    GREATEREQUAL    reduce using rule 80 (exp8 -> exp9 .)
    AND             reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN          reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_PLUS     reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_MINUS    reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_TIMES    reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_DIVIDE   reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_RESDIV   reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_AND      reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_OR       reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_XOR      reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_LEFTSHIFT reduce using rule 80 (exp8 -> exp9 .)
    ASSIGN_RIGHTSHIFT reduce using rule 80 (exp8 -> exp9 .)
    OR              reduce using rule 80 (exp8 -> exp9 .)
    RIGHTKEY        reduce using rule 80 (exp8 -> exp9 .)
    LEFTKEY         reduce using rule 80 (exp8 -> exp9 .)
    RIGHTPAREN      reduce using rule 80 (exp8 -> exp9 .)
    RIGHTBRACKET    reduce using rule 80 (exp8 -> exp9 .)
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    RESDIV          shift and go to state 96

  ! TIMES           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! DIVIDE          [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RESDIV          [ reduce using rule 80 (exp8 -> exp9 .) ]


state 50

    (85) exp10 -> MINUS . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp10                          shift and go to state 97
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49

state 51

    (84) exp9 -> exp10 .

    LEFTPAREN       reduce using rule 84 (exp9 -> exp10 .)
    LEFTBRACKET     reduce using rule 84 (exp9 -> exp10 .)
    STATIC          reduce using rule 84 (exp9 -> exp10 .)
    CONST           reduce using rule 84 (exp9 -> exp10 .)
    FN              reduce using rule 84 (exp9 -> exp10 .)
    $end            reduce using rule 84 (exp9 -> exp10 .)
    TIMES           reduce using rule 84 (exp9 -> exp10 .)
    DIVIDE          reduce using rule 84 (exp9 -> exp10 .)
    RESDIV          reduce using rule 84 (exp9 -> exp10 .)
    PLUS            reduce using rule 84 (exp9 -> exp10 .)
    MINUS           reduce using rule 84 (exp9 -> exp10 .)
    LEFTSHIFT       reduce using rule 84 (exp9 -> exp10 .)
    RIGHTSHIFT      reduce using rule 84 (exp9 -> exp10 .)
    AMPERSAND       reduce using rule 84 (exp9 -> exp10 .)
    XOR             reduce using rule 84 (exp9 -> exp10 .)
    SINGLEOR        reduce using rule 84 (exp9 -> exp10 .)
    EQUAL           reduce using rule 84 (exp9 -> exp10 .)
    NOTEQUAL        reduce using rule 84 (exp9 -> exp10 .)
    LOWER           reduce using rule 84 (exp9 -> exp10 .)
    GREATER         reduce using rule 84 (exp9 -> exp10 .)
    LOWEREQUAL      reduce using rule 84 (exp9 -> exp10 .)
    GREATEREQUAL    reduce using rule 84 (exp9 -> exp10 .)
    AND             reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN          reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_PLUS     reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_MINUS    reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_TIMES    reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_DIVIDE   reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_RESDIV   reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_AND      reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_OR       reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_XOR      reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_LEFTSHIFT reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_RIGHTSHIFT reduce using rule 84 (exp9 -> exp10 .)
    OR              reduce using rule 84 (exp9 -> exp10 .)
    RIGHTKEY        reduce using rule 84 (exp9 -> exp10 .)
    LEFTKEY         reduce using rule 84 (exp9 -> exp10 .)
    RIGHTPAREN      reduce using rule 84 (exp9 -> exp10 .)
    RIGHTBRACKET    reduce using rule 84 (exp9 -> exp10 .)


state 52

    (8) declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO . ASSIGN expressao

    ASSIGN          shift and go to state 100


state 53

    (9) declaracao_constante -> CONST ID ASSIGN expressao .
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    STATIC          reduce using rule 9 (declaracao_constante -> CONST ID ASSIGN expressao .)
    CONST           reduce using rule 9 (declaracao_constante -> CONST ID ASSIGN expressao .)
    FN              reduce using rule 9 (declaracao_constante -> CONST ID ASSIGN expressao .)
    $end            reduce using rule 9 (declaracao_constante -> CONST ID ASSIGN expressao .)
    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58


state 54

    (10) declaracao_constante -> CONST ID DOISPONTOS TIPO . ASSIGN expressao

    ASSIGN          shift and go to state 101


state 55

    (37) parametros_da_funcao -> ID . DOISPONTOS TIPO

    DOISPONTOS      shift and go to state 102


state 56

    (36) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao . RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN

    RIGHTPAREN      shift and go to state 103


state 57

    (88) call_expression -> expressao LEFTPAREN . call_params RIGHTPAREN
    (89) call_params -> . expressao LEFTPAREN expressao RIGHTPAREN
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 104
    call_params                    shift and go to state 105
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 58

    (90) index_expression -> expressao LEFTBRACKET . expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 106
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 59

    (21) expressao_de_bloco -> LEFTKEY declaracao . RIGHTKEY

    RIGHTKEY        shift and go to state 107


state 60

    (22) declaracao -> SEMICOLON .

    RIGHTKEY        reduce using rule 22 (declaracao -> SEMICOLON .)


state 61

    (23) declaracao -> expressao .
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    RIGHTKEY        reduce using rule 23 (declaracao -> expressao .)
    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58


state 62

    (31) expressao_de_if -> IF expressao . expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> IF expressao . expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> IF expressao . expressao_de_bloco ELSE expressao_de_let_if
    (35) expressao_de_let_if -> IF expressao . expressao_de_bloco ELSE expressao_de_let_if
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58
    LEFTKEY         shift and go to state 31

    expressao_de_bloco             shift and go to state 108

state 63

    (34) expressao_de_let_if -> IF LET . ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco

    ID              shift and go to state 109


state 64

    (46) exp -> exp1 ASSIGN . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 110
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 65

    (47) exp -> exp1 ASSIGN_PLUS . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 111
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 66

    (48) exp -> exp1 ASSIGN_MINUS . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 112
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 67

    (49) exp -> exp1 ASSIGN_TIMES . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 113
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 68

    (50) exp -> exp1 ASSIGN_DIVIDE . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 114
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 69

    (51) exp -> exp1 ASSIGN_RESDIV . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 115
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 70

    (52) exp -> exp1 ASSIGN_AND . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 116
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 71

    (53) exp -> exp1 ASSIGN_OR . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 117
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 72

    (54) exp -> exp1 ASSIGN_XOR . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 118
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 73

    (55) exp -> exp1 ASSIGN_LEFTSHIFT . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 119
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 74

    (56) exp -> exp1 ASSIGN_RIGHTSHIFT . exp
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp                            shift and go to state 120
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 75

    (58) exp1 -> exp1 OR . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp1                           shift and go to state 37
    exp2                           shift and go to state 121
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 76

    (87) group_expression -> LEFTPAREN expressao . RIGHTPAREN
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    RIGHTPAREN      shift and go to state 122
    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58


state 77

    (27) expressao_loop_infinito -> LOOP expressao_de_bloco .

    LEFTPAREN       reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    LEFTBRACKET     reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    STATIC          reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    CONST           reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    FN              reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    $end            reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    RIGHTKEY        reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    LEFTKEY         reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    RIGHTPAREN      reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)
    RIGHTBRACKET    reduce using rule 27 (expressao_loop_infinito -> LOOP expressao_de_bloco .)


state 78

    (28) expressao_loop_predicado -> WHILE expressao_de_bloco .

    LEFTPAREN       reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    LEFTBRACKET     reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    STATIC          reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    CONST           reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    FN              reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    $end            reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    RIGHTKEY        reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    LEFTKEY         reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    RIGHTPAREN      reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)
    RIGHTBRACKET    reduce using rule 28 (expressao_loop_predicado -> WHILE expressao_de_bloco .)


state 79

    (29) expressao_loop_iterador -> FOR ID . IN expressao

    IN              shift and go to state 123


state 80

    (60) exp2 -> exp2 AND . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp2                           shift and go to state 42
    exp3                           shift and go to state 124
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 81

    (62) exp3 -> exp3 EQUAL . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp3                           shift and go to state 43
    exp4                           shift and go to state 125
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 82

    (63) exp3 -> exp3 NOTEQUAL . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp3                           shift and go to state 43
    exp4                           shift and go to state 126
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 83

    (64) exp3 -> exp3 LOWER . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp3                           shift and go to state 43
    exp4                           shift and go to state 127
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 84

    (65) exp3 -> exp3 GREATER . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp3                           shift and go to state 43
    exp4                           shift and go to state 128
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 85

    (66) exp3 -> exp3 LOWEREQUAL . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp3                           shift and go to state 43
    exp4                           shift and go to state 129
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 86

    (67) exp3 -> exp3 GREATEREQUAL . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp3                           shift and go to state 43
    exp4                           shift and go to state 130
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 87

    (69) exp4 -> exp4 SINGLEOR . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp4                           shift and go to state 44
    exp5                           shift and go to state 131
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 88

    (71) exp5 -> exp5 XOR . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp5                           shift and go to state 45
    exp6                           shift and go to state 132
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34

state 89

    (73) exp6 -> exp6 AMPERSAND . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp6                           shift and go to state 46
    exp7                           shift and go to state 133
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp5                           shift and go to state 45

state 90

    (75) exp7 -> exp7 LEFTSHIFT . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp7                           shift and go to state 47
    exp8                           shift and go to state 134
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46

state 91

    (76) exp7 -> exp7 RIGHTSHIFT . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp7                           shift and go to state 47
    exp8                           shift and go to state 135
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46

state 92

    (78) exp8 -> exp8 PLUS . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp8                           shift and go to state 48
    exp9                           shift and go to state 136
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47

state 93

    (79) exp8 -> exp8 MINUS . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp8                           shift and go to state 48
    exp9                           shift and go to state 137
    exp10                          shift and go to state 51
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47

state 94

    (81) exp9 -> exp9 TIMES . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp9                           shift and go to state 49
    exp10                          shift and go to state 138
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48

state 95

    (82) exp9 -> exp9 DIVIDE . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp9                           shift and go to state 49
    exp10                          shift and go to state 139
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48

state 96

    (83) exp9 -> exp9 RESDIV . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10

    MINUS           shift and go to state 50
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41

    exp9                           shift and go to state 49
    exp10                          shift and go to state 140
    expressao_sem_bloco            shift and go to state 98
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    exp1                           shift and go to state 37
    expressao                      shift and go to state 99
    exp2                           shift and go to state 42
    expressao_com_bloco            shift and go to state 20
    exp3                           shift and go to state 43
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    exp4                           shift and go to state 44
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48

state 97

    (85) exp10 -> MINUS exp10 .
    (84) exp9 -> exp10 .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for STATIC resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for CONST resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for FN resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for $end resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for TIMES resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for PLUS resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for MINUS resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for XOR resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for LOWER resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for GREATER resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for AND resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for OR resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 84 (exp9 -> exp10 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 84 (exp9 -> exp10 .)
    LEFTPAREN       reduce using rule 84 (exp9 -> exp10 .)
    LEFTBRACKET     reduce using rule 84 (exp9 -> exp10 .)
    STATIC          reduce using rule 84 (exp9 -> exp10 .)
    CONST           reduce using rule 84 (exp9 -> exp10 .)
    FN              reduce using rule 84 (exp9 -> exp10 .)
    $end            reduce using rule 84 (exp9 -> exp10 .)
    TIMES           reduce using rule 84 (exp9 -> exp10 .)
    DIVIDE          reduce using rule 84 (exp9 -> exp10 .)
    RESDIV          reduce using rule 84 (exp9 -> exp10 .)
    PLUS            reduce using rule 84 (exp9 -> exp10 .)
    MINUS           reduce using rule 84 (exp9 -> exp10 .)
    LEFTSHIFT       reduce using rule 84 (exp9 -> exp10 .)
    RIGHTSHIFT      reduce using rule 84 (exp9 -> exp10 .)
    AMPERSAND       reduce using rule 84 (exp9 -> exp10 .)
    XOR             reduce using rule 84 (exp9 -> exp10 .)
    SINGLEOR        reduce using rule 84 (exp9 -> exp10 .)
    EQUAL           reduce using rule 84 (exp9 -> exp10 .)
    NOTEQUAL        reduce using rule 84 (exp9 -> exp10 .)
    LOWER           reduce using rule 84 (exp9 -> exp10 .)
    GREATER         reduce using rule 84 (exp9 -> exp10 .)
    LOWEREQUAL      reduce using rule 84 (exp9 -> exp10 .)
    GREATEREQUAL    reduce using rule 84 (exp9 -> exp10 .)
    AND             reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN          reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_PLUS     reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_MINUS    reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_TIMES    reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_DIVIDE   reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_RESDIV   reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_AND      reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_OR       reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_XOR      reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_LEFTSHIFT reduce using rule 84 (exp9 -> exp10 .)
    ASSIGN_RIGHTSHIFT reduce using rule 84 (exp9 -> exp10 .)
    OR              reduce using rule 84 (exp9 -> exp10 .)
    RIGHTKEY        reduce using rule 84 (exp9 -> exp10 .)
    LEFTKEY         reduce using rule 84 (exp9 -> exp10 .)
    RIGHTPAREN      reduce using rule 84 (exp9 -> exp10 .)
    RIGHTBRACKET    reduce using rule 84 (exp9 -> exp10 .)

  ! LEFTPAREN       [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! LEFTBRACKET     [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! STATIC          [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! CONST           [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! FN              [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! $end            [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! TIMES           [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! DIVIDE          [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! RESDIV          [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! PLUS            [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! MINUS           [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! LEFTSHIFT       [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! RIGHTSHIFT      [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! AMPERSAND       [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! XOR             [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! SINGLEOR        [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! EQUAL           [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! NOTEQUAL        [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! LOWER           [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! GREATER         [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! LOWEREQUAL      [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! GREATEREQUAL    [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! AND             [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN          [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_AND      [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_OR       [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_XOR      [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! OR              [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! RIGHTKEY        [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! LEFTKEY         [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! RIGHTPAREN      [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]
  ! RIGHTBRACKET    [ reduce using rule 85 (exp10 -> MINUS exp10 .) ]


state 98

    (86) exp10 -> expressao_sem_bloco .
    (16) expressao -> expressao_sem_bloco .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 16 (expressao -> expressao_sem_bloco .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 16 (expressao -> expressao_sem_bloco .)
    STATIC          reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    CONST           reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    FN              reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    $end            reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    TIMES           reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    DIVIDE          reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    RESDIV          reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    PLUS            reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    MINUS           reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    LEFTSHIFT       reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    RIGHTSHIFT      reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    AMPERSAND       reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    XOR             reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    SINGLEOR        reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    EQUAL           reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    NOTEQUAL        reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    LOWER           reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    GREATER         reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    LOWEREQUAL      reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    GREATEREQUAL    reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    AND             reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN          reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_PLUS     reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_MINUS    reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_TIMES    reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_DIVIDE   reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_RESDIV   reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_AND      reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_OR       reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_XOR      reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_LEFTSHIFT reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    ASSIGN_RIGHTSHIFT reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    OR              reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    RIGHTKEY        reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    LEFTKEY         reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    RIGHTPAREN      reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    RIGHTBRACKET    reduce using rule 86 (exp10 -> expressao_sem_bloco .)
    LEFTPAREN       reduce using rule 16 (expressao -> expressao_sem_bloco .)
    LEFTBRACKET     reduce using rule 16 (expressao -> expressao_sem_bloco .)

  ! LEFTPAREN       [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]
  ! LEFTBRACKET     [ reduce using rule 86 (exp10 -> expressao_sem_bloco .) ]


state 99

    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58


state 100

    (8) declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 141
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 101

    (10) declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 142
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 102

    (37) parametros_da_funcao -> ID DOISPONTOS . TIPO

    TIPO            shift and go to state 143


state 103

    (36) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN . tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN
    (38) tipo_de_retorno -> . MINUS GREATER TIPO

    MINUS           shift and go to state 145

    tipo_de_retorno                shift and go to state 144

state 104

    (89) call_params -> expressao . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    LEFTPAREN       shift and go to state 146
    LEFTBRACKET     shift and go to state 58


state 105

    (88) call_expression -> expressao LEFTPAREN call_params . RIGHTPAREN

    RIGHTPAREN      shift and go to state 147


state 106

    (90) index_expression -> expressao LEFTBRACKET expressao . RIGHTBRACKET
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 148
    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58


state 107

    (21) expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .

    LEFTPAREN       reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    LEFTBRACKET     reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    STATIC          reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    CONST           reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    FN              reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    $end            reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    RIGHTKEY        reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    LEFTKEY         reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    RIGHTPAREN      reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    RIGHTBRACKET    reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)
    ELSE            reduce using rule 21 (expressao_de_bloco -> LEFTKEY declaracao RIGHTKEY .)


state 108

    (31) expressao_de_if -> IF expressao expressao_de_bloco . ELSE expressao_de_bloco
    (32) expressao_de_if -> IF expressao expressao_de_bloco . ELSE expressao_de_if
    (33) expressao_de_if -> IF expressao expressao_de_bloco . ELSE expressao_de_let_if
    (35) expressao_de_let_if -> IF expressao expressao_de_bloco . ELSE expressao_de_let_if

    ELSE            shift and go to state 149


state 109

    (34) expressao_de_let_if -> IF LET ID . ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco

    ASSIGN          shift and go to state 150


state 110

    (46) exp -> exp1 ASSIGN exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! LEFTBRACKET     [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! STATIC          [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! CONST           [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! FN              [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! $end            [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! TIMES           [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! DIVIDE          [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! RESDIV          [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! PLUS            [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! MINUS           [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! LEFTSHIFT       [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! AMPERSAND       [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! XOR             [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! SINGLEOR        [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! EQUAL           [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! NOTEQUAL        [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! LOWER           [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! GREATER         [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! LOWEREQUAL      [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! GREATEREQUAL    [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! AND             [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN          [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_AND      [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_OR       [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! OR              [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! RIGHTKEY        [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! LEFTKEY         [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! RIGHTPAREN      [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 46 (exp -> exp1 ASSIGN exp .) ]


state 111

    (47) exp -> exp1 ASSIGN_PLUS exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! LEFTBRACKET     [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! STATIC          [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! CONST           [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! FN              [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! $end            [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! TIMES           [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! RESDIV          [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! PLUS            [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! MINUS           [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! LEFTSHIFT       [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! AMPERSAND       [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! XOR             [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! SINGLEOR        [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! EQUAL           [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! NOTEQUAL        [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! LOWER           [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! GREATER         [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! LOWEREQUAL      [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! GREATEREQUAL    [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! AND             [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN          [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_AND      [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_OR       [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! OR              [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! RIGHTKEY        [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! LEFTKEY         [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! RIGHTPAREN      [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 47 (exp -> exp1 ASSIGN_PLUS exp .) ]


state 112

    (48) exp -> exp1 ASSIGN_MINUS exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! LEFTBRACKET     [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! STATIC          [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! CONST           [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! FN              [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! $end            [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! TIMES           [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! RESDIV          [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! PLUS            [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! MINUS           [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! LEFTSHIFT       [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! AMPERSAND       [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! XOR             [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! SINGLEOR        [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! EQUAL           [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! NOTEQUAL        [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! LOWER           [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! GREATER         [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! LOWEREQUAL      [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! GREATEREQUAL    [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! AND             [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN          [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_AND      [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_OR       [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! OR              [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! RIGHTKEY        [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! LEFTKEY         [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! RIGHTPAREN      [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 48 (exp -> exp1 ASSIGN_MINUS exp .) ]


state 113

    (49) exp -> exp1 ASSIGN_TIMES exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! LEFTBRACKET     [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! STATIC          [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! CONST           [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! FN              [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! $end            [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! TIMES           [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! DIVIDE          [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! RESDIV          [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! PLUS            [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! MINUS           [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! LEFTSHIFT       [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! AMPERSAND       [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! XOR             [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! SINGLEOR        [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! EQUAL           [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! NOTEQUAL        [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! LOWER           [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! GREATER         [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! LOWEREQUAL      [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! GREATEREQUAL    [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! AND             [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN          [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_AND      [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_OR       [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! OR              [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! RIGHTKEY        [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! LEFTKEY         [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! RIGHTPAREN      [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 49 (exp -> exp1 ASSIGN_TIMES exp .) ]


state 114

    (50) exp -> exp1 ASSIGN_DIVIDE exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! LEFTBRACKET     [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! STATIC          [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! CONST           [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! FN              [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! $end            [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! TIMES           [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! DIVIDE          [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! RESDIV          [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! PLUS            [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! MINUS           [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! LEFTSHIFT       [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! AMPERSAND       [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! XOR             [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! SINGLEOR        [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! EQUAL           [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! NOTEQUAL        [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! LOWER           [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! GREATER         [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! LOWEREQUAL      [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! GREATEREQUAL    [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! AND             [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN          [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_AND      [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_OR       [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! OR              [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! RIGHTKEY        [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! LEFTKEY         [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! RIGHTPAREN      [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 50 (exp -> exp1 ASSIGN_DIVIDE exp .) ]


state 115

    (51) exp -> exp1 ASSIGN_RESDIV exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! LEFTBRACKET     [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! STATIC          [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! CONST           [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! FN              [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! $end            [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! TIMES           [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! DIVIDE          [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! RESDIV          [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! PLUS            [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! MINUS           [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! LEFTSHIFT       [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! AMPERSAND       [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! XOR             [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! SINGLEOR        [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! EQUAL           [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! NOTEQUAL        [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! LOWER           [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! GREATER         [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! LOWEREQUAL      [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! GREATEREQUAL    [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! AND             [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN          [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_AND      [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_OR       [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! OR              [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! RIGHTKEY        [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! LEFTKEY         [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! RIGHTPAREN      [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 51 (exp -> exp1 ASSIGN_RESDIV exp .) ]


state 116

    (52) exp -> exp1 ASSIGN_AND exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! LEFTBRACKET     [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! STATIC          [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! CONST           [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! FN              [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! $end            [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! TIMES           [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! DIVIDE          [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! RESDIV          [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! PLUS            [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! MINUS           [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! LEFTSHIFT       [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! AMPERSAND       [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! XOR             [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! SINGLEOR        [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! EQUAL           [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! NOTEQUAL        [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! LOWER           [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! GREATER         [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! LOWEREQUAL      [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! GREATEREQUAL    [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! AND             [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN          [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_AND      [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_OR       [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! OR              [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! RIGHTKEY        [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! LEFTKEY         [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! RIGHTPAREN      [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 52 (exp -> exp1 ASSIGN_AND exp .) ]


state 117

    (53) exp -> exp1 ASSIGN_OR exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! LEFTBRACKET     [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! STATIC          [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! CONST           [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! FN              [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! $end            [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! TIMES           [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! DIVIDE          [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! RESDIV          [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! PLUS            [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! MINUS           [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! LEFTSHIFT       [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! AMPERSAND       [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! XOR             [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! SINGLEOR        [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! EQUAL           [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! NOTEQUAL        [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! LOWER           [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! GREATER         [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! LOWEREQUAL      [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! GREATEREQUAL    [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! AND             [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN          [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_AND      [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_OR       [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! OR              [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! RIGHTKEY        [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! LEFTKEY         [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! RIGHTPAREN      [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 53 (exp -> exp1 ASSIGN_OR exp .) ]


state 118

    (54) exp -> exp1 ASSIGN_XOR exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! LEFTBRACKET     [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! STATIC          [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! CONST           [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! FN              [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! $end            [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! TIMES           [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! DIVIDE          [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! RESDIV          [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! PLUS            [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! MINUS           [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! LEFTSHIFT       [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! AMPERSAND       [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! XOR             [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! SINGLEOR        [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! EQUAL           [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! NOTEQUAL        [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! LOWER           [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! GREATER         [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! LOWEREQUAL      [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! GREATEREQUAL    [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! AND             [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN          [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_AND      [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_OR       [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! OR              [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! RIGHTKEY        [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! LEFTKEY         [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! RIGHTPAREN      [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 54 (exp -> exp1 ASSIGN_XOR exp .) ]


state 119

    (55) exp -> exp1 ASSIGN_LEFTSHIFT exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! LEFTBRACKET     [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! STATIC          [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! CONST           [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! FN              [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! $end            [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! TIMES           [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! DIVIDE          [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! RESDIV          [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! PLUS            [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! MINUS           [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! LEFTSHIFT       [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! AMPERSAND       [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! XOR             [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! SINGLEOR        [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! EQUAL           [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! NOTEQUAL        [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! LOWER           [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! GREATER         [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! LOWEREQUAL      [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! GREATEREQUAL    [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! AND             [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN          [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_AND      [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_OR       [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! OR              [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! RIGHTKEY        [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! LEFTKEY         [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! RIGHTPAREN      [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 55 (exp -> exp1 ASSIGN_LEFTSHIFT exp .) ]


state 120

    (56) exp -> exp1 ASSIGN_RIGHTSHIFT exp .
    (40) expressao_sem_bloco -> exp .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for CONST resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for FN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for EQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for OR resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 40 (expressao_sem_bloco -> exp .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 40 (expressao_sem_bloco -> exp .)
    LEFTPAREN       reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTBRACKET     reduce using rule 40 (expressao_sem_bloco -> exp .)
    STATIC          reduce using rule 40 (expressao_sem_bloco -> exp .)
    CONST           reduce using rule 40 (expressao_sem_bloco -> exp .)
    FN              reduce using rule 40 (expressao_sem_bloco -> exp .)
    $end            reduce using rule 40 (expressao_sem_bloco -> exp .)
    TIMES           reduce using rule 40 (expressao_sem_bloco -> exp .)
    DIVIDE          reduce using rule 40 (expressao_sem_bloco -> exp .)
    RESDIV          reduce using rule 40 (expressao_sem_bloco -> exp .)
    PLUS            reduce using rule 40 (expressao_sem_bloco -> exp .)
    MINUS           reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTSHIFT       reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTSHIFT      reduce using rule 40 (expressao_sem_bloco -> exp .)
    AMPERSAND       reduce using rule 40 (expressao_sem_bloco -> exp .)
    XOR             reduce using rule 40 (expressao_sem_bloco -> exp .)
    SINGLEOR        reduce using rule 40 (expressao_sem_bloco -> exp .)
    EQUAL           reduce using rule 40 (expressao_sem_bloco -> exp .)
    NOTEQUAL        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWER           reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATER         reduce using rule 40 (expressao_sem_bloco -> exp .)
    LOWEREQUAL      reduce using rule 40 (expressao_sem_bloco -> exp .)
    GREATEREQUAL    reduce using rule 40 (expressao_sem_bloco -> exp .)
    AND             reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN          reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_PLUS     reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_MINUS    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_TIMES    reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_DIVIDE   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RESDIV   reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_AND      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_OR       reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_XOR      reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_LEFTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    ASSIGN_RIGHTSHIFT reduce using rule 40 (expressao_sem_bloco -> exp .)
    OR              reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTKEY        reduce using rule 40 (expressao_sem_bloco -> exp .)
    LEFTKEY         reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTPAREN      reduce using rule 40 (expressao_sem_bloco -> exp .)
    RIGHTBRACKET    reduce using rule 40 (expressao_sem_bloco -> exp .)

  ! LEFTPAREN       [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! LEFTBRACKET     [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! STATIC          [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! CONST           [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! FN              [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! $end            [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! TIMES           [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! DIVIDE          [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! RESDIV          [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! PLUS            [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! MINUS           [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! LEFTSHIFT       [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! RIGHTSHIFT      [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! AMPERSAND       [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! XOR             [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! SINGLEOR        [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! EQUAL           [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! NOTEQUAL        [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! LOWER           [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! GREATER         [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! LOWEREQUAL      [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! GREATEREQUAL    [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! AND             [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN          [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_PLUS     [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_MINUS    [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_TIMES    [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_AND      [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_OR       [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_XOR      [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! OR              [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! RIGHTKEY        [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! LEFTKEY         [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! RIGHTPAREN      [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]
  ! RIGHTBRACKET    [ reduce using rule 56 (exp -> exp1 ASSIGN_RIGHTSHIFT exp .) ]


state 121

    (58) exp1 -> exp1 OR exp2 .
    (60) exp2 -> exp2 . AND exp3
    (59) exp1 -> exp2 .

  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for STATIC resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for CONST resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for FN resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for $end resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for TIMES resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for PLUS resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for MINUS resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for XOR resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for LOWER resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for GREATER resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for ASSIGN resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for OR resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 58 (exp1 -> exp1 OR exp2 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 58 (exp1 -> exp1 OR exp2 .)
    LEFTPAREN       reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    LEFTBRACKET     reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    STATIC          reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    CONST           reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    FN              reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    $end            reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    TIMES           reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    DIVIDE          reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    RESDIV          reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    PLUS            reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    MINUS           reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    LEFTSHIFT       reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    RIGHTSHIFT      reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    AMPERSAND       reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    XOR             reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    SINGLEOR        reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    EQUAL           reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    NOTEQUAL        reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    LOWER           reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    GREATER         reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    LOWEREQUAL      reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    GREATEREQUAL    reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN          reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_PLUS     reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_MINUS    reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_TIMES    reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_DIVIDE   reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_RESDIV   reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_AND      reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_OR       reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_XOR      reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_LEFTSHIFT reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    ASSIGN_RIGHTSHIFT reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    OR              reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    RIGHTKEY        reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    LEFTKEY         reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    RIGHTPAREN      reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    RIGHTBRACKET    reduce using rule 58 (exp1 -> exp1 OR exp2 .)
    AND             shift and go to state 80

  ! AND             [ reduce using rule 58 (exp1 -> exp1 OR exp2 .) ]
  ! LEFTPAREN       [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! LEFTBRACKET     [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! STATIC          [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! CONST           [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! FN              [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! $end            [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! TIMES           [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! DIVIDE          [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! RESDIV          [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! PLUS            [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! MINUS           [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! LEFTSHIFT       [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! RIGHTSHIFT      [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! AMPERSAND       [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! XOR             [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! SINGLEOR        [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! EQUAL           [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! NOTEQUAL        [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! LOWER           [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! GREATER         [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! LOWEREQUAL      [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! GREATEREQUAL    [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! AND             [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN          [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_AND      [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_OR       [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_XOR      [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! OR              [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! RIGHTKEY        [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! LEFTKEY         [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! RIGHTPAREN      [ reduce using rule 59 (exp1 -> exp2 .) ]
  ! RIGHTBRACKET    [ reduce using rule 59 (exp1 -> exp2 .) ]


state 122

    (87) group_expression -> LEFTPAREN expressao RIGHTPAREN .

    LEFTPAREN       reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    LEFTBRACKET     reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    STATIC          reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    CONST           reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    FN              reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    $end            reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    TIMES           reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    DIVIDE          reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    RESDIV          reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    PLUS            reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    MINUS           reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    LEFTSHIFT       reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    RIGHTSHIFT      reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    AMPERSAND       reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    XOR             reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    SINGLEOR        reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    EQUAL           reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    NOTEQUAL        reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    LOWER           reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    GREATER         reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    LOWEREQUAL      reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    GREATEREQUAL    reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    AND             reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN          reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_PLUS     reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_MINUS    reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_TIMES    reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_DIVIDE   reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_RESDIV   reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_AND      reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_OR       reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_XOR      reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_LEFTSHIFT reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    ASSIGN_RIGHTSHIFT reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    OR              reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    RIGHTKEY        reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    LEFTKEY         reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 87 (group_expression -> LEFTPAREN expressao RIGHTPAREN .)


state 123

    (29) expressao_loop_iterador -> FOR ID IN . expressao
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 151
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 124

    (60) exp2 -> exp2 AND exp3 .
    (62) exp3 -> exp3 . EQUAL exp4
    (63) exp3 -> exp3 . NOTEQUAL exp4
    (64) exp3 -> exp3 . LOWER exp4
    (65) exp3 -> exp3 . GREATER exp4
    (66) exp3 -> exp3 . LOWEREQUAL exp4
    (67) exp3 -> exp3 . GREATEREQUAL exp4
    (61) exp2 -> exp3 .

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LOWEREQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for STATIC resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for CONST resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for FN resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for $end resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for TIMES resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for PLUS resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for MINUS resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for XOR resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LOWEREQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for OR resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 60 (exp2 -> exp2 AND exp3 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 60 (exp2 -> exp2 AND exp3 .)
    LEFTPAREN       reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    LEFTBRACKET     reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    STATIC          reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    CONST           reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    FN              reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    $end            reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    TIMES           reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    DIVIDE          reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    RESDIV          reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    PLUS            reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    MINUS           reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    LEFTSHIFT       reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    RIGHTSHIFT      reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    AMPERSAND       reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    XOR             reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    SINGLEOR        reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    AND             reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN          reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_PLUS     reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_MINUS    reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_TIMES    reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_DIVIDE   reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_RESDIV   reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_AND      reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_OR       reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_XOR      reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_LEFTSHIFT reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    ASSIGN_RIGHTSHIFT reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    OR              reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    RIGHTKEY        reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    LEFTKEY         reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    RIGHTPAREN      reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    RIGHTBRACKET    reduce using rule 60 (exp2 -> exp2 AND exp3 .)
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LOWER           shift and go to state 83
    GREATER         shift and go to state 84
    LOWEREQUAL      shift and go to state 85
    GREATEREQUAL    shift and go to state 86

  ! EQUAL           [ reduce using rule 60 (exp2 -> exp2 AND exp3 .) ]
  ! NOTEQUAL        [ reduce using rule 60 (exp2 -> exp2 AND exp3 .) ]
  ! LOWER           [ reduce using rule 60 (exp2 -> exp2 AND exp3 .) ]
  ! GREATER         [ reduce using rule 60 (exp2 -> exp2 AND exp3 .) ]
  ! LOWEREQUAL      [ reduce using rule 60 (exp2 -> exp2 AND exp3 .) ]
  ! GREATEREQUAL    [ reduce using rule 60 (exp2 -> exp2 AND exp3 .) ]
  ! LEFTPAREN       [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! LEFTBRACKET     [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! STATIC          [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! CONST           [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! FN              [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! $end            [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! TIMES           [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! DIVIDE          [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! RESDIV          [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! PLUS            [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! MINUS           [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! LEFTSHIFT       [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! RIGHTSHIFT      [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! AMPERSAND       [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! XOR             [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! SINGLEOR        [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! EQUAL           [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! NOTEQUAL        [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! LOWER           [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! GREATER         [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! LOWEREQUAL      [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! GREATEREQUAL    [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! AND             [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN          [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_AND      [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_OR       [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_XOR      [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! OR              [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! RIGHTKEY        [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! LEFTKEY         [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! RIGHTPAREN      [ reduce using rule 61 (exp2 -> exp3 .) ]
  ! RIGHTBRACKET    [ reduce using rule 61 (exp2 -> exp3 .) ]


state 125

    (62) exp3 -> exp3 EQUAL exp4 .
    (69) exp4 -> exp4 . SINGLEOR exp5
    (68) exp3 -> exp4 .

  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for STATIC resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for CONST resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for FN resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for $end resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for TIMES resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for PLUS resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for MINUS resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for XOR resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for EQUAL resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for LOWER resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for GREATER resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for AND resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for OR resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    LEFTPAREN       reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    LEFTBRACKET     reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    STATIC          reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    CONST           reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    FN              reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    $end            reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    TIMES           reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    DIVIDE          reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    RESDIV          reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    PLUS            reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    MINUS           reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    LEFTSHIFT       reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    RIGHTSHIFT      reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    AMPERSAND       reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    XOR             reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    EQUAL           reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    NOTEQUAL        reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    LOWER           reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    GREATER         reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    LOWEREQUAL      reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    GREATEREQUAL    reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    AND             reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN          reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_PLUS     reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_MINUS    reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_TIMES    reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_DIVIDE   reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_RESDIV   reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_AND      reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_OR       reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_XOR      reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_LEFTSHIFT reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    ASSIGN_RIGHTSHIFT reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    OR              reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    RIGHTKEY        reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    LEFTKEY         reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    RIGHTPAREN      reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    RIGHTBRACKET    reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .)
    SINGLEOR        shift and go to state 87

  ! SINGLEOR        [ reduce using rule 62 (exp3 -> exp3 EQUAL exp4 .) ]
  ! LEFTPAREN       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTBRACKET     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! STATIC          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! CONST           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! FN              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! $end            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! TIMES           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! DIVIDE          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RESDIV          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! PLUS            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! MINUS           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTSHIFT       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTSHIFT      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AMPERSAND       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! XOR             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! SINGLEOR        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! EQUAL           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! NOTEQUAL        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWER           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATER         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWEREQUAL      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATEREQUAL    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AND             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_AND      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_OR       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_XOR      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! OR              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTKEY        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTKEY         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTPAREN      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTBRACKET    [ reduce using rule 68 (exp3 -> exp4 .) ]


state 126

    (63) exp3 -> exp3 NOTEQUAL exp4 .
    (69) exp4 -> exp4 . SINGLEOR exp5
    (68) exp3 -> exp4 .

  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for STATIC resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for CONST resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for FN resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for $end resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for TIMES resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for PLUS resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for MINUS resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for XOR resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for EQUAL resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for LOWER resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for GREATER resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for AND resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for OR resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    LEFTPAREN       reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    LEFTBRACKET     reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    STATIC          reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    CONST           reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    FN              reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    $end            reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    TIMES           reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    DIVIDE          reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    RESDIV          reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    PLUS            reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    MINUS           reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    LEFTSHIFT       reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    RIGHTSHIFT      reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    AMPERSAND       reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    XOR             reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    EQUAL           reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    NOTEQUAL        reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    LOWER           reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    GREATER         reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    LOWEREQUAL      reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    GREATEREQUAL    reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    AND             reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN          reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_PLUS     reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_MINUS    reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_TIMES    reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_DIVIDE   reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_RESDIV   reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_AND      reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_OR       reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_XOR      reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_LEFTSHIFT reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    ASSIGN_RIGHTSHIFT reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    OR              reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    RIGHTKEY        reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    LEFTKEY         reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    RIGHTPAREN      reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    RIGHTBRACKET    reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .)
    SINGLEOR        shift and go to state 87

  ! SINGLEOR        [ reduce using rule 63 (exp3 -> exp3 NOTEQUAL exp4 .) ]
  ! LEFTPAREN       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTBRACKET     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! STATIC          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! CONST           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! FN              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! $end            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! TIMES           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! DIVIDE          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RESDIV          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! PLUS            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! MINUS           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTSHIFT       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTSHIFT      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AMPERSAND       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! XOR             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! SINGLEOR        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! EQUAL           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! NOTEQUAL        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWER           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATER         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWEREQUAL      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATEREQUAL    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AND             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_AND      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_OR       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_XOR      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! OR              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTKEY        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTKEY         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTPAREN      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTBRACKET    [ reduce using rule 68 (exp3 -> exp4 .) ]


state 127

    (64) exp3 -> exp3 LOWER exp4 .
    (69) exp4 -> exp4 . SINGLEOR exp5
    (68) exp3 -> exp4 .

  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for STATIC resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for CONST resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for FN resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for $end resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for TIMES resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for PLUS resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for MINUS resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for XOR resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for EQUAL resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for LOWER resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for GREATER resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for AND resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for OR resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 64 (exp3 -> exp3 LOWER exp4 .)
    LEFTPAREN       reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    LEFTBRACKET     reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    STATIC          reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    CONST           reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    FN              reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    $end            reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    TIMES           reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    DIVIDE          reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    RESDIV          reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    PLUS            reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    MINUS           reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    LEFTSHIFT       reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    RIGHTSHIFT      reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    AMPERSAND       reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    XOR             reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    EQUAL           reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    NOTEQUAL        reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    LOWER           reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    GREATER         reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    LOWEREQUAL      reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    GREATEREQUAL    reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    AND             reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN          reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_PLUS     reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_MINUS    reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_TIMES    reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_DIVIDE   reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_RESDIV   reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_AND      reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_OR       reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_XOR      reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_LEFTSHIFT reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    ASSIGN_RIGHTSHIFT reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    OR              reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    RIGHTKEY        reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    LEFTKEY         reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    RIGHTPAREN      reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    RIGHTBRACKET    reduce using rule 64 (exp3 -> exp3 LOWER exp4 .)
    SINGLEOR        shift and go to state 87

  ! SINGLEOR        [ reduce using rule 64 (exp3 -> exp3 LOWER exp4 .) ]
  ! LEFTPAREN       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTBRACKET     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! STATIC          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! CONST           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! FN              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! $end            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! TIMES           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! DIVIDE          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RESDIV          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! PLUS            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! MINUS           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTSHIFT       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTSHIFT      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AMPERSAND       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! XOR             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! SINGLEOR        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! EQUAL           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! NOTEQUAL        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWER           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATER         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWEREQUAL      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATEREQUAL    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AND             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_AND      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_OR       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_XOR      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! OR              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTKEY        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTKEY         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTPAREN      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTBRACKET    [ reduce using rule 68 (exp3 -> exp4 .) ]


state 128

    (65) exp3 -> exp3 GREATER exp4 .
    (69) exp4 -> exp4 . SINGLEOR exp5
    (68) exp3 -> exp4 .

  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for STATIC resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for CONST resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for FN resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for $end resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for TIMES resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for PLUS resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for MINUS resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for XOR resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for EQUAL resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for LOWER resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for GREATER resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for AND resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for OR resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 65 (exp3 -> exp3 GREATER exp4 .)
    LEFTPAREN       reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    LEFTBRACKET     reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    STATIC          reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    CONST           reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    FN              reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    $end            reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    TIMES           reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    DIVIDE          reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    RESDIV          reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    PLUS            reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    MINUS           reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    LEFTSHIFT       reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    RIGHTSHIFT      reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    AMPERSAND       reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    XOR             reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    EQUAL           reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    NOTEQUAL        reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    LOWER           reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    GREATER         reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    LOWEREQUAL      reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    GREATEREQUAL    reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    AND             reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN          reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_PLUS     reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_MINUS    reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_TIMES    reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_DIVIDE   reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_RESDIV   reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_AND      reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_OR       reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_XOR      reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_LEFTSHIFT reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    ASSIGN_RIGHTSHIFT reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    OR              reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    RIGHTKEY        reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    LEFTKEY         reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    RIGHTPAREN      reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    RIGHTBRACKET    reduce using rule 65 (exp3 -> exp3 GREATER exp4 .)
    SINGLEOR        shift and go to state 87

  ! SINGLEOR        [ reduce using rule 65 (exp3 -> exp3 GREATER exp4 .) ]
  ! LEFTPAREN       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTBRACKET     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! STATIC          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! CONST           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! FN              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! $end            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! TIMES           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! DIVIDE          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RESDIV          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! PLUS            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! MINUS           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTSHIFT       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTSHIFT      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AMPERSAND       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! XOR             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! SINGLEOR        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! EQUAL           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! NOTEQUAL        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWER           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATER         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWEREQUAL      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATEREQUAL    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AND             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_AND      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_OR       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_XOR      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! OR              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTKEY        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTKEY         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTPAREN      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTBRACKET    [ reduce using rule 68 (exp3 -> exp4 .) ]


state 129

    (66) exp3 -> exp3 LOWEREQUAL exp4 .
    (69) exp4 -> exp4 . SINGLEOR exp5
    (68) exp3 -> exp4 .

  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for STATIC resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for CONST resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for FN resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for $end resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for TIMES resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for PLUS resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for MINUS resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for XOR resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for EQUAL resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for LOWER resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for GREATER resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for AND resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for OR resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    LEFTPAREN       reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    LEFTBRACKET     reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    STATIC          reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    CONST           reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    FN              reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    $end            reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    TIMES           reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    DIVIDE          reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    RESDIV          reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    PLUS            reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    MINUS           reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    LEFTSHIFT       reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    RIGHTSHIFT      reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    AMPERSAND       reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    XOR             reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    EQUAL           reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    NOTEQUAL        reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    LOWER           reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    GREATER         reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    LOWEREQUAL      reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    GREATEREQUAL    reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    AND             reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN          reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_PLUS     reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_MINUS    reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_TIMES    reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_DIVIDE   reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_RESDIV   reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_AND      reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_OR       reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_XOR      reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_LEFTSHIFT reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    ASSIGN_RIGHTSHIFT reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    OR              reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    RIGHTKEY        reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    LEFTKEY         reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    RIGHTPAREN      reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    RIGHTBRACKET    reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .)
    SINGLEOR        shift and go to state 87

  ! SINGLEOR        [ reduce using rule 66 (exp3 -> exp3 LOWEREQUAL exp4 .) ]
  ! LEFTPAREN       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTBRACKET     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! STATIC          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! CONST           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! FN              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! $end            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! TIMES           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! DIVIDE          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RESDIV          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! PLUS            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! MINUS           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTSHIFT       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTSHIFT      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AMPERSAND       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! XOR             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! SINGLEOR        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! EQUAL           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! NOTEQUAL        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWER           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATER         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWEREQUAL      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATEREQUAL    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AND             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_AND      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_OR       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_XOR      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! OR              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTKEY        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTKEY         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTPAREN      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTBRACKET    [ reduce using rule 68 (exp3 -> exp4 .) ]


state 130

    (67) exp3 -> exp3 GREATEREQUAL exp4 .
    (69) exp4 -> exp4 . SINGLEOR exp5
    (68) exp3 -> exp4 .

  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for STATIC resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for CONST resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for FN resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for $end resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for XOR resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! shift/reduce conflict for SINGLEOR resolved as shift
  ! reduce/reduce conflict for EQUAL resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for LOWER resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for GREATER resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for AND resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for OR resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    LEFTPAREN       reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    LEFTBRACKET     reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    STATIC          reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    CONST           reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    FN              reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    $end            reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    TIMES           reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    DIVIDE          reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    RESDIV          reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    PLUS            reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    MINUS           reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    LEFTSHIFT       reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    RIGHTSHIFT      reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    AMPERSAND       reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    XOR             reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    EQUAL           reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    NOTEQUAL        reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    LOWER           reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    GREATER         reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    LOWEREQUAL      reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    GREATEREQUAL    reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    AND             reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN          reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_PLUS     reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_MINUS    reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_TIMES    reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_DIVIDE   reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_RESDIV   reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_AND      reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_OR       reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_XOR      reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_LEFTSHIFT reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    ASSIGN_RIGHTSHIFT reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    OR              reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    RIGHTKEY        reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    LEFTKEY         reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    RIGHTPAREN      reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    RIGHTBRACKET    reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .)
    SINGLEOR        shift and go to state 87

  ! SINGLEOR        [ reduce using rule 67 (exp3 -> exp3 GREATEREQUAL exp4 .) ]
  ! LEFTPAREN       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTBRACKET     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! STATIC          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! CONST           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! FN              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! $end            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! TIMES           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! DIVIDE          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RESDIV          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! PLUS            [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! MINUS           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTSHIFT       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTSHIFT      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AMPERSAND       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! XOR             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! SINGLEOR        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! EQUAL           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! NOTEQUAL        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWER           [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATER         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LOWEREQUAL      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! GREATEREQUAL    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! AND             [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN          [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_AND      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_OR       [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_XOR      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! OR              [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTKEY        [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! LEFTKEY         [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTPAREN      [ reduce using rule 68 (exp3 -> exp4 .) ]
  ! RIGHTBRACKET    [ reduce using rule 68 (exp3 -> exp4 .) ]


state 131

    (69) exp4 -> exp4 SINGLEOR exp5 .
    (71) exp5 -> exp5 . XOR exp6
    (70) exp4 -> exp5 .

  ! shift/reduce conflict for XOR resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for STATIC resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for CONST resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for FN resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for $end resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for TIMES resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for PLUS resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for MINUS resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! shift/reduce conflict for XOR resolved as shift
  ! reduce/reduce conflict for SINGLEOR resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for LOWER resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for GREATER resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for AND resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for OR resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    LEFTPAREN       reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    LEFTBRACKET     reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    STATIC          reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    CONST           reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    FN              reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    $end            reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    TIMES           reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    DIVIDE          reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    RESDIV          reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    PLUS            reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    MINUS           reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    LEFTSHIFT       reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    RIGHTSHIFT      reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    AMPERSAND       reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    SINGLEOR        reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    EQUAL           reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    NOTEQUAL        reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    LOWER           reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    GREATER         reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    LOWEREQUAL      reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    GREATEREQUAL    reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    AND             reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN          reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_PLUS     reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_MINUS    reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_TIMES    reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_DIVIDE   reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_RESDIV   reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_AND      reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_OR       reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_XOR      reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_LEFTSHIFT reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    ASSIGN_RIGHTSHIFT reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    OR              reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    RIGHTKEY        reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    LEFTKEY         reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    RIGHTPAREN      reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    RIGHTBRACKET    reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .)
    XOR             shift and go to state 88

  ! XOR             [ reduce using rule 69 (exp4 -> exp4 SINGLEOR exp5 .) ]
  ! LEFTPAREN       [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! LEFTBRACKET     [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! STATIC          [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! CONST           [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! FN              [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! $end            [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! TIMES           [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! DIVIDE          [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! RESDIV          [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! PLUS            [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! MINUS           [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! LEFTSHIFT       [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! RIGHTSHIFT      [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! AMPERSAND       [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! XOR             [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! SINGLEOR        [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! EQUAL           [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! NOTEQUAL        [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! LOWER           [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! GREATER         [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! LOWEREQUAL      [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! GREATEREQUAL    [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! AND             [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN          [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_AND      [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_OR       [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_XOR      [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! OR              [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! RIGHTKEY        [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! LEFTKEY         [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! RIGHTPAREN      [ reduce using rule 70 (exp4 -> exp5 .) ]
  ! RIGHTBRACKET    [ reduce using rule 70 (exp4 -> exp5 .) ]


state 132

    (71) exp5 -> exp5 XOR exp6 .
    (73) exp6 -> exp6 . AMPERSAND exp7
    (72) exp5 -> exp6 .

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for STATIC resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for CONST resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for FN resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for $end resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for TIMES resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for PLUS resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for MINUS resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! reduce/reduce conflict for XOR resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for LOWER resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for GREATER resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for AND resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for OR resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 71 (exp5 -> exp5 XOR exp6 .)
    LEFTPAREN       reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    LEFTBRACKET     reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    STATIC          reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    CONST           reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    FN              reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    $end            reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    TIMES           reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    DIVIDE          reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    RESDIV          reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    PLUS            reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    MINUS           reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    LEFTSHIFT       reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    RIGHTSHIFT      reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    XOR             reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    SINGLEOR        reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    EQUAL           reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    NOTEQUAL        reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    LOWER           reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    GREATER         reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    LOWEREQUAL      reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    GREATEREQUAL    reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    AND             reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN          reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_PLUS     reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_MINUS    reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_TIMES    reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_DIVIDE   reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_RESDIV   reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_AND      reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_OR       reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_XOR      reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_LEFTSHIFT reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    ASSIGN_RIGHTSHIFT reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    OR              reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    RIGHTKEY        reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    LEFTKEY         reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    RIGHTPAREN      reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    RIGHTBRACKET    reduce using rule 71 (exp5 -> exp5 XOR exp6 .)
    AMPERSAND       shift and go to state 89

  ! AMPERSAND       [ reduce using rule 71 (exp5 -> exp5 XOR exp6 .) ]
  ! LEFTPAREN       [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! LEFTBRACKET     [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! STATIC          [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! CONST           [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! FN              [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! $end            [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! TIMES           [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! DIVIDE          [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! RESDIV          [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! PLUS            [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! MINUS           [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! LEFTSHIFT       [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! RIGHTSHIFT      [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! AMPERSAND       [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! XOR             [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! SINGLEOR        [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! EQUAL           [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! NOTEQUAL        [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! LOWER           [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! GREATER         [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! LOWEREQUAL      [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! GREATEREQUAL    [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! AND             [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN          [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_AND      [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_OR       [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_XOR      [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! OR              [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! RIGHTKEY        [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! LEFTKEY         [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! RIGHTPAREN      [ reduce using rule 72 (exp5 -> exp6 .) ]
  ! RIGHTBRACKET    [ reduce using rule 72 (exp5 -> exp6 .) ]


state 133

    (73) exp6 -> exp6 AMPERSAND exp7 .
    (75) exp7 -> exp7 . LEFTSHIFT exp8
    (76) exp7 -> exp7 . RIGHTSHIFT exp8
    (74) exp6 -> exp7 .

  ! shift/reduce conflict for LEFTSHIFT resolved as shift
  ! shift/reduce conflict for RIGHTSHIFT resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for STATIC resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for CONST resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for FN resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for $end resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for TIMES resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for PLUS resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for MINUS resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! shift/reduce conflict for LEFTSHIFT resolved as shift
  ! shift/reduce conflict for RIGHTSHIFT resolved as shift
  ! reduce/reduce conflict for AMPERSAND resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for XOR resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for LOWER resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for GREATER resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for AND resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for OR resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    LEFTPAREN       reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    LEFTBRACKET     reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    STATIC          reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    CONST           reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    FN              reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    $end            reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    TIMES           reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    DIVIDE          reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    RESDIV          reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    PLUS            reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    MINUS           reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    AMPERSAND       reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    XOR             reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    SINGLEOR        reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    EQUAL           reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    NOTEQUAL        reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    LOWER           reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    GREATER         reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    LOWEREQUAL      reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    GREATEREQUAL    reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    AND             reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN          reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_PLUS     reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_MINUS    reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_TIMES    reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_DIVIDE   reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_RESDIV   reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_AND      reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_OR       reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_XOR      reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_LEFTSHIFT reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    ASSIGN_RIGHTSHIFT reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    OR              reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    RIGHTKEY        reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    LEFTKEY         reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    RIGHTPAREN      reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    RIGHTBRACKET    reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .)
    LEFTSHIFT       shift and go to state 90
    RIGHTSHIFT      shift and go to state 91

  ! LEFTSHIFT       [ reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .) ]
  ! RIGHTSHIFT      [ reduce using rule 73 (exp6 -> exp6 AMPERSAND exp7 .) ]
  ! LEFTPAREN       [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! LEFTBRACKET     [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! STATIC          [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! CONST           [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! FN              [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! $end            [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! TIMES           [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! DIVIDE          [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! RESDIV          [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! PLUS            [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! MINUS           [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! LEFTSHIFT       [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! RIGHTSHIFT      [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! AMPERSAND       [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! XOR             [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! SINGLEOR        [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! EQUAL           [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! NOTEQUAL        [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! LOWER           [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! GREATER         [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! LOWEREQUAL      [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! GREATEREQUAL    [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! AND             [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN          [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_AND      [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_OR       [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_XOR      [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! OR              [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! RIGHTKEY        [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! LEFTKEY         [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! RIGHTPAREN      [ reduce using rule 74 (exp6 -> exp7 .) ]
  ! RIGHTBRACKET    [ reduce using rule 74 (exp6 -> exp7 .) ]


state 134

    (75) exp7 -> exp7 LEFTSHIFT exp8 .
    (78) exp8 -> exp8 . PLUS exp9
    (79) exp8 -> exp8 . MINUS exp9
    (77) exp7 -> exp8 .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for STATIC resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for CONST resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for FN resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for $end resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for TIMES resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for XOR resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for LOWER resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for GREATER resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for AND resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for OR resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    LEFTPAREN       reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    LEFTBRACKET     reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    STATIC          reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    CONST           reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    FN              reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    $end            reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    TIMES           reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    DIVIDE          reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    RESDIV          reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    LEFTSHIFT       reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    RIGHTSHIFT      reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    AMPERSAND       reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    XOR             reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    SINGLEOR        reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    EQUAL           reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    NOTEQUAL        reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    LOWER           reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    GREATER         reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    LOWEREQUAL      reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    GREATEREQUAL    reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    AND             reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN          reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_PLUS     reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_MINUS    reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_TIMES    reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_DIVIDE   reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_RESDIV   reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_AND      reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_OR       reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_XOR      reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_LEFTSHIFT reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    ASSIGN_RIGHTSHIFT reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    OR              reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    RIGHTKEY        reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    LEFTKEY         reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    RIGHTPAREN      reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    RIGHTBRACKET    reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93

  ! PLUS            [ reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .) ]
  ! MINUS           [ reduce using rule 75 (exp7 -> exp7 LEFTSHIFT exp8 .) ]
  ! LEFTPAREN       [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LEFTBRACKET     [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! STATIC          [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! CONST           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! FN              [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! $end            [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! TIMES           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! DIVIDE          [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RESDIV          [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! PLUS            [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! MINUS           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LEFTSHIFT       [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RIGHTSHIFT      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! AMPERSAND       [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! XOR             [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! SINGLEOR        [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! EQUAL           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! NOTEQUAL        [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LOWER           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! GREATER         [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LOWEREQUAL      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! GREATEREQUAL    [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! AND             [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN          [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_AND      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_OR       [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_XOR      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! OR              [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RIGHTKEY        [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LEFTKEY         [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RIGHTPAREN      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RIGHTBRACKET    [ reduce using rule 77 (exp7 -> exp8 .) ]


state 135

    (76) exp7 -> exp7 RIGHTSHIFT exp8 .
    (78) exp8 -> exp8 . PLUS exp9
    (79) exp8 -> exp8 . MINUS exp9
    (77) exp7 -> exp8 .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for STATIC resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for CONST resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for FN resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for $end resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for TIMES resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for XOR resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for LOWER resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for GREATER resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for AND resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for OR resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    LEFTPAREN       reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    LEFTBRACKET     reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    STATIC          reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    CONST           reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    FN              reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    $end            reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    TIMES           reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    DIVIDE          reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    RESDIV          reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    LEFTSHIFT       reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    RIGHTSHIFT      reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    AMPERSAND       reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    XOR             reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    SINGLEOR        reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    EQUAL           reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    NOTEQUAL        reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    LOWER           reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    GREATER         reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    LOWEREQUAL      reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    GREATEREQUAL    reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    AND             reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN          reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_PLUS     reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_MINUS    reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_TIMES    reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_DIVIDE   reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_RESDIV   reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_AND      reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_OR       reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_XOR      reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_LEFTSHIFT reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    ASSIGN_RIGHTSHIFT reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    OR              reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    RIGHTKEY        reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    LEFTKEY         reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    RIGHTPAREN      reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    RIGHTBRACKET    reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93

  ! PLUS            [ reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .) ]
  ! MINUS           [ reduce using rule 76 (exp7 -> exp7 RIGHTSHIFT exp8 .) ]
  ! LEFTPAREN       [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LEFTBRACKET     [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! STATIC          [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! CONST           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! FN              [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! $end            [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! TIMES           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! DIVIDE          [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RESDIV          [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! PLUS            [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! MINUS           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LEFTSHIFT       [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RIGHTSHIFT      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! AMPERSAND       [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! XOR             [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! SINGLEOR        [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! EQUAL           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! NOTEQUAL        [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LOWER           [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! GREATER         [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LOWEREQUAL      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! GREATEREQUAL    [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! AND             [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN          [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_AND      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_OR       [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_XOR      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! OR              [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RIGHTKEY        [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! LEFTKEY         [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RIGHTPAREN      [ reduce using rule 77 (exp7 -> exp8 .) ]
  ! RIGHTBRACKET    [ reduce using rule 77 (exp7 -> exp8 .) ]


state 136

    (78) exp8 -> exp8 PLUS exp9 .
    (81) exp9 -> exp9 . TIMES exp10
    (82) exp9 -> exp9 . DIVIDE exp10
    (83) exp9 -> exp9 . RESDIV exp10
    (80) exp8 -> exp9 .

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for RESDIV resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for STATIC resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for CONST resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for FN resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for $end resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for RESDIV resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for MINUS resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for XOR resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for LOWER resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for GREATER resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for AND resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for OR resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 78 (exp8 -> exp8 PLUS exp9 .)
    LEFTPAREN       reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    LEFTBRACKET     reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    STATIC          reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    CONST           reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    FN              reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    $end            reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    PLUS            reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    MINUS           reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    LEFTSHIFT       reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    RIGHTSHIFT      reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    AMPERSAND       reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    XOR             reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    SINGLEOR        reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    EQUAL           reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    NOTEQUAL        reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    LOWER           reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    GREATER         reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    LOWEREQUAL      reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    GREATEREQUAL    reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    AND             reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN          reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_PLUS     reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_MINUS    reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_TIMES    reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_DIVIDE   reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_RESDIV   reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_AND      reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_OR       reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_XOR      reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_LEFTSHIFT reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    ASSIGN_RIGHTSHIFT reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    OR              reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    RIGHTKEY        reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    LEFTKEY         reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    RIGHTPAREN      reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    RIGHTBRACKET    reduce using rule 78 (exp8 -> exp8 PLUS exp9 .)
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    RESDIV          shift and go to state 96

  ! TIMES           [ reduce using rule 78 (exp8 -> exp8 PLUS exp9 .) ]
  ! DIVIDE          [ reduce using rule 78 (exp8 -> exp8 PLUS exp9 .) ]
  ! RESDIV          [ reduce using rule 78 (exp8 -> exp8 PLUS exp9 .) ]
  ! LEFTPAREN       [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LEFTBRACKET     [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! STATIC          [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! CONST           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! FN              [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! $end            [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! TIMES           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! DIVIDE          [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RESDIV          [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! PLUS            [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! MINUS           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LEFTSHIFT       [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RIGHTSHIFT      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! AMPERSAND       [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! XOR             [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! SINGLEOR        [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! EQUAL           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! NOTEQUAL        [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LOWER           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! GREATER         [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LOWEREQUAL      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! GREATEREQUAL    [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! AND             [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN          [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_AND      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_OR       [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_XOR      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! OR              [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RIGHTKEY        [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LEFTKEY         [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RIGHTPAREN      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RIGHTBRACKET    [ reduce using rule 80 (exp8 -> exp9 .) ]


state 137

    (79) exp8 -> exp8 MINUS exp9 .
    (81) exp9 -> exp9 . TIMES exp10
    (82) exp9 -> exp9 . DIVIDE exp10
    (83) exp9 -> exp9 . RESDIV exp10
    (80) exp8 -> exp9 .

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for RESDIV resolved as shift
  ! reduce/reduce conflict for LEFTPAREN resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for STATIC resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for CONST resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for FN resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for $end resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for RESDIV resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for MINUS resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for XOR resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for LOWER resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for GREATER resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for AND resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for OR resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 79 (exp8 -> exp8 MINUS exp9 .)
    LEFTPAREN       reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    LEFTBRACKET     reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    STATIC          reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    CONST           reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    FN              reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    $end            reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    PLUS            reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    MINUS           reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    LEFTSHIFT       reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    RIGHTSHIFT      reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    AMPERSAND       reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    XOR             reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    SINGLEOR        reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    EQUAL           reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    NOTEQUAL        reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    LOWER           reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    GREATER         reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    LOWEREQUAL      reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    GREATEREQUAL    reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    AND             reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN          reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_PLUS     reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_MINUS    reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_TIMES    reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_DIVIDE   reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_RESDIV   reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_AND      reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_OR       reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_XOR      reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_LEFTSHIFT reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    ASSIGN_RIGHTSHIFT reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    OR              reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    RIGHTKEY        reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    LEFTKEY         reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    RIGHTPAREN      reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    RIGHTBRACKET    reduce using rule 79 (exp8 -> exp8 MINUS exp9 .)
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    RESDIV          shift and go to state 96

  ! TIMES           [ reduce using rule 79 (exp8 -> exp8 MINUS exp9 .) ]
  ! DIVIDE          [ reduce using rule 79 (exp8 -> exp8 MINUS exp9 .) ]
  ! RESDIV          [ reduce using rule 79 (exp8 -> exp8 MINUS exp9 .) ]
  ! LEFTPAREN       [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LEFTBRACKET     [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! STATIC          [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! CONST           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! FN              [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! $end            [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! TIMES           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! DIVIDE          [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RESDIV          [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! PLUS            [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! MINUS           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LEFTSHIFT       [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RIGHTSHIFT      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! AMPERSAND       [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! XOR             [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! SINGLEOR        [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! EQUAL           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! NOTEQUAL        [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LOWER           [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! GREATER         [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LOWEREQUAL      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! GREATEREQUAL    [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! AND             [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN          [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_AND      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_OR       [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_XOR      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! OR              [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RIGHTKEY        [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! LEFTKEY         [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RIGHTPAREN      [ reduce using rule 80 (exp8 -> exp9 .) ]
  ! RIGHTBRACKET    [ reduce using rule 80 (exp8 -> exp9 .) ]


state 138

    (81) exp9 -> exp9 TIMES exp10 .
    (84) exp9 -> exp10 .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for STATIC resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for CONST resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for FN resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for $end resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for TIMES resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for PLUS resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for MINUS resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for XOR resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for LOWER resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for GREATER resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for AND resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for OR resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 81 (exp9 -> exp9 TIMES exp10 .)
    LEFTPAREN       reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    LEFTBRACKET     reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    STATIC          reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    CONST           reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    FN              reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    $end            reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    TIMES           reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    DIVIDE          reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    RESDIV          reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    PLUS            reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    MINUS           reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    LEFTSHIFT       reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    RIGHTSHIFT      reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    AMPERSAND       reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    XOR             reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    SINGLEOR        reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    EQUAL           reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    NOTEQUAL        reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    LOWER           reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    GREATER         reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    LOWEREQUAL      reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    GREATEREQUAL    reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    AND             reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN          reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_PLUS     reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_MINUS    reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_TIMES    reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_DIVIDE   reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_RESDIV   reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_AND      reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_OR       reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_XOR      reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_LEFTSHIFT reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    ASSIGN_RIGHTSHIFT reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    OR              reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    RIGHTKEY        reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    LEFTKEY         reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    RIGHTPAREN      reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)
    RIGHTBRACKET    reduce using rule 81 (exp9 -> exp9 TIMES exp10 .)

  ! LEFTPAREN       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LEFTBRACKET     [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! STATIC          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! CONST           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! FN              [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! $end            [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! TIMES           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! DIVIDE          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RESDIV          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! PLUS            [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! MINUS           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LEFTSHIFT       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTSHIFT      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! AMPERSAND       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! XOR             [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! SINGLEOR        [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! EQUAL           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! NOTEQUAL        [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LOWER           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! GREATER         [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LOWEREQUAL      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! GREATEREQUAL    [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! AND             [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_AND      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_OR       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_XOR      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! OR              [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTKEY        [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LEFTKEY         [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTPAREN      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTBRACKET    [ reduce using rule 84 (exp9 -> exp10 .) ]


state 139

    (82) exp9 -> exp9 DIVIDE exp10 .
    (84) exp9 -> exp10 .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for STATIC resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for CONST resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for FN resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for $end resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for TIMES resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for PLUS resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for MINUS resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for XOR resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for LOWER resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for GREATER resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for AND resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for OR resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    LEFTPAREN       reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    LEFTBRACKET     reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    STATIC          reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    CONST           reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    FN              reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    $end            reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    TIMES           reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    DIVIDE          reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    RESDIV          reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    PLUS            reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    MINUS           reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    LEFTSHIFT       reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    RIGHTSHIFT      reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    AMPERSAND       reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    XOR             reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    SINGLEOR        reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    EQUAL           reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    NOTEQUAL        reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    LOWER           reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    GREATER         reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    LOWEREQUAL      reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    GREATEREQUAL    reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    AND             reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN          reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_PLUS     reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_MINUS    reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_TIMES    reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_DIVIDE   reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_RESDIV   reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_AND      reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_OR       reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_XOR      reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_LEFTSHIFT reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    ASSIGN_RIGHTSHIFT reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    OR              reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    RIGHTKEY        reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    LEFTKEY         reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    RIGHTPAREN      reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)
    RIGHTBRACKET    reduce using rule 82 (exp9 -> exp9 DIVIDE exp10 .)

  ! LEFTPAREN       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LEFTBRACKET     [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! STATIC          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! CONST           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! FN              [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! $end            [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! TIMES           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! DIVIDE          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RESDIV          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! PLUS            [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! MINUS           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LEFTSHIFT       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTSHIFT      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! AMPERSAND       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! XOR             [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! SINGLEOR        [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! EQUAL           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! NOTEQUAL        [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LOWER           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! GREATER         [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LOWEREQUAL      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! GREATEREQUAL    [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! AND             [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_AND      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_OR       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_XOR      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! OR              [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTKEY        [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LEFTKEY         [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTPAREN      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTBRACKET    [ reduce using rule 84 (exp9 -> exp10 .) ]


state 140

    (83) exp9 -> exp9 RESDIV exp10 .
    (84) exp9 -> exp10 .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for STATIC resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for CONST resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for FN resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for $end resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for TIMES resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for RESDIV resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for PLUS resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for MINUS resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for LEFTSHIFT resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for RIGHTSHIFT resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for XOR resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for SINGLEOR resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for EQUAL resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for LOWER resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for GREATER resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for LOWEREQUAL resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for AND resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_PLUS resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_MINUS resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_TIMES resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_DIVIDE resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_RESDIV resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_AND resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_OR resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_XOR resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_LEFTSHIFT resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for ASSIGN_RIGHTSHIFT resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for OR resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    LEFTPAREN       reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    LEFTBRACKET     reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    STATIC          reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    CONST           reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    FN              reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    $end            reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    TIMES           reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    DIVIDE          reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    RESDIV          reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    PLUS            reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    MINUS           reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    LEFTSHIFT       reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    RIGHTSHIFT      reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    AMPERSAND       reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    XOR             reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    SINGLEOR        reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    EQUAL           reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    NOTEQUAL        reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    LOWER           reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    GREATER         reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    LOWEREQUAL      reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    GREATEREQUAL    reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    AND             reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN          reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_PLUS     reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_MINUS    reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_TIMES    reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_DIVIDE   reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_RESDIV   reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_AND      reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_OR       reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_XOR      reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_LEFTSHIFT reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    ASSIGN_RIGHTSHIFT reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    OR              reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    RIGHTKEY        reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    LEFTKEY         reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    RIGHTPAREN      reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)
    RIGHTBRACKET    reduce using rule 83 (exp9 -> exp9 RESDIV exp10 .)

  ! LEFTPAREN       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LEFTBRACKET     [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! STATIC          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! CONST           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! FN              [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! $end            [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! TIMES           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! DIVIDE          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RESDIV          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! PLUS            [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! MINUS           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LEFTSHIFT       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTSHIFT      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! AMPERSAND       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! XOR             [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! SINGLEOR        [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! EQUAL           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! NOTEQUAL        [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LOWER           [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! GREATER         [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LOWEREQUAL      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! GREATEREQUAL    [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! AND             [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN          [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_PLUS     [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_MINUS    [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_TIMES    [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_RESDIV   [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_AND      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_OR       [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_XOR      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_LEFTSHIFT [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! ASSIGN_RIGHTSHIFT [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! OR              [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTKEY        [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! LEFTKEY         [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTPAREN      [ reduce using rule 84 (exp9 -> exp10 .) ]
  ! RIGHTBRACKET    [ reduce using rule 84 (exp9 -> exp10 .) ]


state 141

    (8) declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    STATIC          reduce using rule 8 (declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .)
    CONST           reduce using rule 8 (declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .)
    FN              reduce using rule 8 (declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .)
    $end            reduce using rule 8 (declaracao_variavel_externa -> STATIC ID DOISPONTOS TIPO ASSIGN expressao .)
    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58


state 142

    (10) declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    STATIC          reduce using rule 10 (declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .)
    CONST           reduce using rule 10 (declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .)
    FN              reduce using rule 10 (declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .)
    $end            reduce using rule 10 (declaracao_constante -> CONST ID DOISPONTOS TIPO ASSIGN expressao .)
    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58


state 143

    (37) parametros_da_funcao -> ID DOISPONTOS TIPO .

    RIGHTPAREN      reduce using rule 37 (parametros_da_funcao -> ID DOISPONTOS TIPO .)


state 144

    (36) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno . LEFTPAREN expressao_de_bloco RIGHTPAREN

    LEFTPAREN       shift and go to state 152


state 145

    (38) tipo_de_retorno -> MINUS . GREATER TIPO

    GREATER         shift and go to state 153


state 146

    (89) call_params -> expressao LEFTPAREN . expressao RIGHTPAREN
    (88) call_expression -> expressao LEFTPAREN . call_params RIGHTPAREN
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (89) call_params -> . expressao LEFTPAREN expressao RIGHTPAREN
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 154
    call_params                    shift and go to state 105
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_bloco             shift and go to state 22
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 147

    (88) call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .

    LEFTPAREN       reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    LEFTBRACKET     reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    STATIC          reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    CONST           reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    FN              reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    $end            reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    TIMES           reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    DIVIDE          reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    RESDIV          reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    PLUS            reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    MINUS           reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    LEFTSHIFT       reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    RIGHTSHIFT      reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    AMPERSAND       reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    XOR             reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    SINGLEOR        reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    EQUAL           reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    NOTEQUAL        reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    LOWER           reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    GREATER         reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    LOWEREQUAL      reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    GREATEREQUAL    reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    AND             reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN          reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_PLUS     reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_MINUS    reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_TIMES    reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_DIVIDE   reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_RESDIV   reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_AND      reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_OR       reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_XOR      reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_LEFTSHIFT reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    ASSIGN_RIGHTSHIFT reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    OR              reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    RIGHTKEY        reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    LEFTKEY         reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 88 (call_expression -> expressao LEFTPAREN call_params RIGHTPAREN .)


state 148

    (90) index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .

    LEFTPAREN       reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    LEFTBRACKET     reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    STATIC          reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    CONST           reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    FN              reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    $end            reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    TIMES           reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    DIVIDE          reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    RESDIV          reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    PLUS            reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    MINUS           reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    LEFTSHIFT       reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    RIGHTSHIFT      reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    AMPERSAND       reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    XOR             reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    SINGLEOR        reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    EQUAL           reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    NOTEQUAL        reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    LOWER           reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    GREATER         reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    LOWEREQUAL      reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    GREATEREQUAL    reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    AND             reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN          reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_PLUS     reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_MINUS    reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_TIMES    reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_DIVIDE   reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_RESDIV   reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_AND      reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_OR       reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_XOR      reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_LEFTSHIFT reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    ASSIGN_RIGHTSHIFT reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    OR              reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    RIGHTKEY        reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    LEFTKEY         reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    RIGHTPAREN      reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 90 (index_expression -> expressao LEFTBRACKET expressao RIGHTBRACKET .)


state 149

    (31) expressao_de_if -> IF expressao expressao_de_bloco ELSE . expressao_de_bloco
    (32) expressao_de_if -> IF expressao expressao_de_bloco ELSE . expressao_de_if
    (33) expressao_de_if -> IF expressao expressao_de_bloco ELSE . expressao_de_let_if
    (35) expressao_de_let_if -> IF expressao expressao_de_bloco ELSE . expressao_de_let_if
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35

    expressao_de_bloco             shift and go to state 155
    expressao_de_if                shift and go to state 156
    expressao_de_let_if            shift and go to state 157

state 150

    (34) expressao_de_let_if -> IF LET ID ASSIGN . expressao expressao_de_bloco ELSE expressao_de_bloco
    (15) expressao -> . expressao_com_bloco
    (16) expressao -> . expressao_sem_bloco
    (17) expressao_com_bloco -> . expressao_de_bloco
    (18) expressao_com_bloco -> . expressao_de_loop
    (19) expressao_com_bloco -> . expressao_de_if
    (20) expressao_com_bloco -> . expressao_de_let_if
    (39) expressao_sem_bloco -> . literal_expression
    (40) expressao_sem_bloco -> . exp
    (41) expressao_sem_bloco -> . group_expression
    (42) expressao_sem_bloco -> . call_expression
    (43) expressao_sem_bloco -> . index_expression
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY
    (24) expressao_de_loop -> . expressao_loop_infinito
    (25) expressao_de_loop -> . expressao_loop_predicado
    (26) expressao_de_loop -> . expressao_loop_iterador
    (31) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_bloco
    (32) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_if
    (33) expressao_de_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (34) expressao_de_let_if -> . IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco
    (35) expressao_de_let_if -> . IF expressao expressao_de_bloco ELSE expressao_de_let_if
    (44) literal_expression -> . INT
    (46) exp -> . exp1 ASSIGN exp
    (47) exp -> . exp1 ASSIGN_PLUS exp
    (48) exp -> . exp1 ASSIGN_MINUS exp
    (49) exp -> . exp1 ASSIGN_TIMES exp
    (50) exp -> . exp1 ASSIGN_DIVIDE exp
    (51) exp -> . exp1 ASSIGN_RESDIV exp
    (52) exp -> . exp1 ASSIGN_AND exp
    (53) exp -> . exp1 ASSIGN_OR exp
    (54) exp -> . exp1 ASSIGN_XOR exp
    (55) exp -> . exp1 ASSIGN_LEFTSHIFT exp
    (56) exp -> . exp1 ASSIGN_RIGHTSHIFT exp
    (57) exp -> . exp1
    (87) group_expression -> . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> . expressao LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> . expressao LEFTBRACKET expressao RIGHTBRACKET
    (27) expressao_loop_infinito -> . LOOP expressao_de_bloco
    (28) expressao_loop_predicado -> . WHILE expressao_de_bloco
    (29) expressao_loop_iterador -> . FOR ID IN expressao
    (58) exp1 -> . exp1 OR exp2
    (59) exp1 -> . exp2
    (60) exp2 -> . exp2 AND exp3
    (61) exp2 -> . exp3
    (62) exp3 -> . exp3 EQUAL exp4
    (63) exp3 -> . exp3 NOTEQUAL exp4
    (64) exp3 -> . exp3 LOWER exp4
    (65) exp3 -> . exp3 GREATER exp4
    (66) exp3 -> . exp3 LOWEREQUAL exp4
    (67) exp3 -> . exp3 GREATEREQUAL exp4
    (68) exp3 -> . exp4
    (69) exp4 -> . exp4 SINGLEOR exp5
    (70) exp4 -> . exp5
    (71) exp5 -> . exp5 XOR exp6
    (72) exp5 -> . exp6
    (73) exp6 -> . exp6 AMPERSAND exp7
    (74) exp6 -> . exp7
    (75) exp7 -> . exp7 LEFTSHIFT exp8
    (76) exp7 -> . exp7 RIGHTSHIFT exp8
    (77) exp7 -> . exp8
    (78) exp8 -> . exp8 PLUS exp9
    (79) exp8 -> . exp8 MINUS exp9
    (80) exp8 -> . exp9
    (81) exp9 -> . exp9 TIMES exp10
    (82) exp9 -> . exp9 DIVIDE exp10
    (83) exp9 -> . exp9 RESDIV exp10
    (84) exp9 -> . exp10
    (85) exp10 -> . MINUS exp10
    (86) exp10 -> . expressao_sem_bloco

    LEFTKEY         shift and go to state 31
    IF              shift and go to state 35
    INT             shift and go to state 36
    LEFTPAREN       shift and go to state 38
    LOOP            shift and go to state 39
    WHILE           shift and go to state 40
    FOR             shift and go to state 41
    MINUS           shift and go to state 50

    expressao                      shift and go to state 158
    expressao_de_bloco             shift and go to state 22
    expressao_com_bloco            shift and go to state 20
    expressao_sem_bloco            shift and go to state 21
    expressao_de_loop              shift and go to state 23
    expressao_de_if                shift and go to state 24
    expressao_de_let_if            shift and go to state 25
    literal_expression             shift and go to state 26
    exp                            shift and go to state 27
    group_expression               shift and go to state 28
    call_expression                shift and go to state 29
    index_expression               shift and go to state 30
    expressao_loop_infinito        shift and go to state 32
    expressao_loop_predicado       shift and go to state 33
    expressao_loop_iterador        shift and go to state 34
    exp1                           shift and go to state 37
    exp2                           shift and go to state 42
    exp3                           shift and go to state 43
    exp4                           shift and go to state 44
    exp5                           shift and go to state 45
    exp6                           shift and go to state 46
    exp7                           shift and go to state 47
    exp8                           shift and go to state 48
    exp9                           shift and go to state 49
    exp10                          shift and go to state 51

state 151

    (29) expressao_loop_iterador -> FOR ID IN expressao .
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

  ! shift/reduce conflict for LEFTPAREN resolved as shift
  ! shift/reduce conflict for LEFTBRACKET resolved as shift
    STATIC          reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .)
    CONST           reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .)
    FN              reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .)
    $end            reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .)
    RIGHTKEY        reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .)
    LEFTKEY         reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .)
    RIGHTPAREN      reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .)
    RIGHTBRACKET    reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .)
    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58

  ! LEFTPAREN       [ reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .) ]
  ! LEFTBRACKET     [ reduce using rule 29 (expressao_loop_iterador -> FOR ID IN expressao .) ]


state 152

    (36) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN . expressao_de_bloco RIGHTPAREN
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTKEY         shift and go to state 31

    expressao_de_bloco             shift and go to state 159

state 153

    (38) tipo_de_retorno -> MINUS GREATER . TIPO

    TIPO            shift and go to state 160


state 154

    (89) call_params -> expressao LEFTPAREN expressao . RIGHTPAREN
    (89) call_params -> expressao . LEFTPAREN expressao RIGHTPAREN
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET

    RIGHTPAREN      shift and go to state 161
    LEFTPAREN       shift and go to state 146
    LEFTBRACKET     shift and go to state 58


state 155

    (31) expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .

    LEFTPAREN       reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    LEFTBRACKET     reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    STATIC          reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    CONST           reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    FN              reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    $end            reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    RIGHTKEY        reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    LEFTKEY         reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    RIGHTPAREN      reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)
    RIGHTBRACKET    reduce using rule 31 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_bloco .)


state 156

    (32) expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .

    LEFTPAREN       reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    LEFTBRACKET     reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    STATIC          reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    CONST           reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    FN              reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    $end            reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    RIGHTKEY        reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    LEFTKEY         reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    RIGHTPAREN      reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)
    RIGHTBRACKET    reduce using rule 32 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_if .)


state 157

    (33) expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .
    (35) expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .

  ! reduce/reduce conflict for LEFTPAREN resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
  ! reduce/reduce conflict for LEFTBRACKET resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
  ! reduce/reduce conflict for STATIC resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
  ! reduce/reduce conflict for CONST resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
  ! reduce/reduce conflict for FN resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
  ! reduce/reduce conflict for $end resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
  ! reduce/reduce conflict for LEFTKEY resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
  ! reduce/reduce conflict for RIGHTPAREN resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    LEFTPAREN       reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    LEFTBRACKET     reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    STATIC          reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    CONST           reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    FN              reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    $end            reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    RIGHTKEY        reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    LEFTKEY         reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    RIGHTPAREN      reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)
    RIGHTBRACKET    reduce using rule 33 (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .)

  ! LEFTPAREN       [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]
  ! LEFTBRACKET     [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]
  ! STATIC          [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]
  ! CONST           [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]
  ! FN              [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]
  ! $end            [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]
  ! RIGHTKEY        [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]
  ! LEFTKEY         [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]
  ! RIGHTPAREN      [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]
  ! RIGHTBRACKET    [ reduce using rule 35 (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if .) ]


state 158

    (34) expressao_de_let_if -> IF LET ID ASSIGN expressao . expressao_de_bloco ELSE expressao_de_bloco
    (88) call_expression -> expressao . LEFTPAREN call_params RIGHTPAREN
    (90) index_expression -> expressao . LEFTBRACKET expressao RIGHTBRACKET
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTPAREN       shift and go to state 57
    LEFTBRACKET     shift and go to state 58
    LEFTKEY         shift and go to state 31

    expressao_de_bloco             shift and go to state 162

state 159

    (36) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco . RIGHTPAREN

    RIGHTPAREN      shift and go to state 163


state 160

    (38) tipo_de_retorno -> MINUS GREATER TIPO .

    LEFTPAREN       reduce using rule 38 (tipo_de_retorno -> MINUS GREATER TIPO .)


state 161

    (89) call_params -> expressao LEFTPAREN expressao RIGHTPAREN .

    RIGHTPAREN      reduce using rule 89 (call_params -> expressao LEFTPAREN expressao RIGHTPAREN .)


state 162

    (34) expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco . ELSE expressao_de_bloco

    ELSE            shift and go to state 164


state 163

    (36) declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .

    STATIC          reduce using rule 36 (declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .)
    CONST           reduce using rule 36 (declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .)
    FN              reduce using rule 36 (declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .)
    $end            reduce using rule 36 (declaracao_funcao -> FN ID LEFTPAREN parametros_da_funcao RIGHTPAREN tipo_de_retorno LEFTPAREN expressao_de_bloco RIGHTPAREN .)


state 164

    (34) expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE . expressao_de_bloco
    (21) expressao_de_bloco -> . LEFTKEY declaracao RIGHTKEY

    LEFTKEY         shift and go to state 31

    expressao_de_bloco             shift and go to state 165

state 165

    (34) expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .

    LEFTPAREN       reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)
    LEFTBRACKET     reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)
    STATIC          reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)
    CONST           reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)
    FN              reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)
    $end            reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)
    RIGHTKEY        reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)
    LEFTKEY         reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)
    RIGHTPAREN      reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)
    RIGHTBRACKET    reduce using rule 34 (expressao_de_let_if -> IF LET ID ASSIGN expressao expressao_de_bloco ELSE expressao_de_bloco .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASSIGN in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_TIMES in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_DIVIDE in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_RESDIV in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_AND in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_OR in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_XOR in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_LEFTSHIFT in state 37 resolved as shift
WARNING: shift/reduce conflict for ASSIGN_RIGHTSHIFT in state 37 resolved as shift
WARNING: shift/reduce conflict for OR in state 37 resolved as shift
WARNING: shift/reduce conflict for AND in state 42 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 43 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 43 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 43 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 43 resolved as shift
WARNING: shift/reduce conflict for LOWEREQUAL in state 43 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 43 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 44 resolved as shift
WARNING: shift/reduce conflict for XOR in state 45 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 46 resolved as shift
WARNING: shift/reduce conflict for LEFTSHIFT in state 47 resolved as shift
WARNING: shift/reduce conflict for RIGHTSHIFT in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for RESDIV in state 49 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 124 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 124 resolved as shift
WARNING: shift/reduce conflict for LOWEREQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 124 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 124 resolved as shift
WARNING: shift/reduce conflict for LOWEREQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 125 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 125 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 126 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 126 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 127 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 127 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 128 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 128 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 129 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 129 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 130 resolved as shift
WARNING: shift/reduce conflict for SINGLEOR in state 130 resolved as shift
WARNING: shift/reduce conflict for XOR in state 131 resolved as shift
WARNING: shift/reduce conflict for XOR in state 131 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 132 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 132 resolved as shift
WARNING: shift/reduce conflict for LEFTSHIFT in state 133 resolved as shift
WARNING: shift/reduce conflict for RIGHTSHIFT in state 133 resolved as shift
WARNING: shift/reduce conflict for LEFTSHIFT in state 133 resolved as shift
WARNING: shift/reduce conflict for RIGHTSHIFT in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 136 resolved as shift
WARNING: shift/reduce conflict for RESDIV in state 136 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 136 resolved as shift
WARNING: shift/reduce conflict for RESDIV in state 136 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 137 resolved as shift
WARNING: shift/reduce conflict for RESDIV in state 137 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 137 resolved as shift
WARNING: shift/reduce conflict for RESDIV in state 137 resolved as shift
WARNING: shift/reduce conflict for LEFTPAREN in state 151 resolved as shift
WARNING: shift/reduce conflict for LEFTBRACKET in state 151 resolved as shift
WARNING: reduce/reduce conflict in state 21 resolved using rule (expressao -> expressao_sem_bloco)
WARNING: rejected rule (exp10 -> expressao_sem_bloco) in state 21
WARNING: reduce/reduce conflict in state 97 resolved using rule (exp9 -> exp10)
WARNING: rejected rule (exp10 -> MINUS exp10) in state 97
WARNING: reduce/reduce conflict in state 98 resolved using rule (expressao -> expressao_sem_bloco)
WARNING: rejected rule (exp10 -> expressao_sem_bloco) in state 98
WARNING: reduce/reduce conflict in state 110 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN exp) in state 110
WARNING: reduce/reduce conflict in state 111 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_PLUS exp) in state 111
WARNING: reduce/reduce conflict in state 112 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_MINUS exp) in state 112
WARNING: reduce/reduce conflict in state 113 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_TIMES exp) in state 113
WARNING: reduce/reduce conflict in state 114 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_DIVIDE exp) in state 114
WARNING: reduce/reduce conflict in state 115 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_RESDIV exp) in state 115
WARNING: reduce/reduce conflict in state 116 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_AND exp) in state 116
WARNING: reduce/reduce conflict in state 117 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_OR exp) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_XOR exp) in state 118
WARNING: reduce/reduce conflict in state 119 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_LEFTSHIFT exp) in state 119
WARNING: reduce/reduce conflict in state 120 resolved using rule (expressao_sem_bloco -> exp)
WARNING: rejected rule (exp -> exp1 ASSIGN_RIGHTSHIFT exp) in state 120
WARNING: reduce/reduce conflict in state 121 resolved using rule (exp1 -> exp1 OR exp2)
WARNING: rejected rule (exp1 -> exp2) in state 121
WARNING: reduce/reduce conflict in state 124 resolved using rule (exp2 -> exp2 AND exp3)
WARNING: rejected rule (exp2 -> exp3) in state 124
WARNING: reduce/reduce conflict in state 125 resolved using rule (exp3 -> exp3 EQUAL exp4)
WARNING: rejected rule (exp3 -> exp4) in state 125
WARNING: reduce/reduce conflict in state 126 resolved using rule (exp3 -> exp3 NOTEQUAL exp4)
WARNING: rejected rule (exp3 -> exp4) in state 126
WARNING: reduce/reduce conflict in state 127 resolved using rule (exp3 -> exp3 LOWER exp4)
WARNING: rejected rule (exp3 -> exp4) in state 127
WARNING: reduce/reduce conflict in state 128 resolved using rule (exp3 -> exp3 GREATER exp4)
WARNING: rejected rule (exp3 -> exp4) in state 128
WARNING: reduce/reduce conflict in state 129 resolved using rule (exp3 -> exp3 LOWEREQUAL exp4)
WARNING: rejected rule (exp3 -> exp4) in state 129
WARNING: reduce/reduce conflict in state 130 resolved using rule (exp3 -> exp3 GREATEREQUAL exp4)
WARNING: rejected rule (exp3 -> exp4) in state 130
WARNING: reduce/reduce conflict in state 131 resolved using rule (exp4 -> exp4 SINGLEOR exp5)
WARNING: rejected rule (exp4 -> exp5) in state 131
WARNING: reduce/reduce conflict in state 132 resolved using rule (exp5 -> exp5 XOR exp6)
WARNING: rejected rule (exp5 -> exp6) in state 132
WARNING: reduce/reduce conflict in state 133 resolved using rule (exp6 -> exp6 AMPERSAND exp7)
WARNING: rejected rule (exp6 -> exp7) in state 133
WARNING: reduce/reduce conflict in state 134 resolved using rule (exp7 -> exp7 LEFTSHIFT exp8)
WARNING: rejected rule (exp7 -> exp8) in state 134
WARNING: reduce/reduce conflict in state 135 resolved using rule (exp7 -> exp7 RIGHTSHIFT exp8)
WARNING: rejected rule (exp7 -> exp8) in state 135
WARNING: reduce/reduce conflict in state 136 resolved using rule (exp8 -> exp8 PLUS exp9)
WARNING: rejected rule (exp8 -> exp9) in state 136
WARNING: reduce/reduce conflict in state 137 resolved using rule (exp8 -> exp8 MINUS exp9)
WARNING: rejected rule (exp8 -> exp9) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (exp9 -> exp9 TIMES exp10)
WARNING: rejected rule (exp9 -> exp10) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (exp9 -> exp9 DIVIDE exp10)
WARNING: rejected rule (exp9 -> exp10) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (exp9 -> exp9 RESDIV exp10)
WARNING: rejected rule (exp9 -> exp10) in state 140
WARNING: reduce/reduce conflict in state 157 resolved using rule (expressao_de_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if)
WARNING: rejected rule (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if) in state 157
WARNING: Rule (exp10 -> MINUS exp10) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_PLUS exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_MINUS exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_TIMES exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_DIVIDE exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_RESDIV exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_AND exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_OR exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_XOR exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_LEFTSHIFT exp) is never reduced
WARNING: Rule (exp -> exp1 ASSIGN_RIGHTSHIFT exp) is never reduced
WARNING: Rule (expressao_de_let_if -> IF expressao expressao_de_bloco ELSE expressao_de_let_if) is never reduced
